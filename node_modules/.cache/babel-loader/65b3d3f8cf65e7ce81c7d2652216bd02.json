{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\src\\\\page\\\\ComplexNumber\\\\Page\\\\page3.js\";\nimport React from 'react';\nimport { Video } from \"../video-component/video\";\nimport { MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon, MDBModal, MDBInput, MDBModalFooter } from 'mdbreact';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css';\nimport { Input } from \"./Input\";\nexport var ComplexPage3 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComplexPage3, _React$Component);\n\n  function ComplexPage3(props) {\n    var _this;\n\n    _classCallCheck(this, ComplexPage3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComplexPage3).call(this, props));\n\n    _this.toggle = function (nr) {\n      return function () {\n        var modalNumber = 'modal' + nr;\n\n        _this.setState(_defineProperty({}, modalNumber, !_this.state[modalNumber]));\n      };\n    };\n\n    _this.post = function () {\n      var option = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"A\": _this.state.a,\n          \"B\": _this.state.b,\n          \"C\": _this.state.c,\n          \"D\": _this.state.d,\n          \"step\": _this.state.step.toString(),\n          \"answer\": _this.state.value\n        })\n      };\n      fetch('http://127.0.0.1:5000/complexnumber', option).then(function (response) {\n        return response.text();\n      }).then(function (answer) {\n        _this.setState({\n          hint: answer.substring(1, answer.length)\n        });\n\n        if (answer.substr(0, 1) === '1') {\n          var arr = _toConsumableArray(_this.state.answers);\n\n          var step = _toConsumableArray(_this.state.step);\n\n          arr.push(_this.state.value);\n          step = step + 1;\n\n          _this.setState({\n            answers: arr,\n            step: step\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      modal14: false,\n      answers: [],\n      a: '',\n      b: '',\n      c: '',\n      d: '',\n      value: '',\n      step: 1,\n      hint: '',\n      isRight: true\n    };\n    return _this;\n  }\n\n  _createClass(ComplexPage3, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex align-items-baseline justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"COMPLEX NUMBERS:\"), React.createElement(\"div\", {\n        className: classes.title2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"\\xA0Division\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"6\",\n        className: classes.font3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Video, {\n        url: 'https://alistempirefoundation.org/assets/dividingcomplex.mp4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Dividing complex numbers can be a lot more challenging.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), \"A \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"complex number\"), \" is a combination of a \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"real number\"), \" and an \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"imaginary number\"), \". We generally write \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"complex numbers\"), \" in \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"a + bi\"), \"\\xA0form, where  \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"a\"), \"\\xA0 is the real number and\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"bi\"), \"\\xA0is the imaginary number. For example, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"3 + 7i\"), \"\\xA0or\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"5 - 2i\"), \"\\xA0.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), \"Typically, whether adding, subtracting, multiplying or dividing complex numbers, we enclose each complex number inside parentheses like this:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"(6 - 5i) + (2 + 3i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"(4 + 8i) - (3 - 2i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"(7 - 4i)(5 + 9i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"(8 - 6i)/(1- 3i)\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Dividing complex numbers can be a lot more challenging.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), \"When adding or subtracting complex numbers, you can only combine \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"like terms\"), \", meaning you can only combine the real part of each number together and the imaginary part of each number together.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), \"So, using the problem\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"(6 - 5i) + (2 + 3i)\"), \", you would first combine the real parts, the\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"6\"), \"\\xA0 and the\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"2\"), \"\\xA0, to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"8\"), \"\\xA0; and then you would combine the imaginary parts, the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"-5i\"), \"\\xA0and the\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"3i\"), \"\\xA0, to get\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"-2i\"), \"\\xA0. This leaves you with the complex number \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"8 - 2i\"), \"\\xA0.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), \"On a side note, since we are dealing with addition, you could also simply rewrite the problem without the parentheses, \\xA0\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"(6 - 5i) + (2 + 3i)\"), \", and then combine like terms. That\\u2019s completely legal in the case of an addition problem, but keep in mind it doesn\\u2019t work exactly like that for subtraction. We\\u2019ll talk about that when we discuss subtracting complex numbers.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), \"Let\\u2019s try another.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), \"Given \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"(-3 + 2i) + (7 - i)\"), \"\\xA0. Combine the real parts, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"-3 + 7\"), \"\\xA0, to get\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"4\"), \". Then combine the imaginary parts,\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"2i - i\"), \", to get\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"i\"), \". You are left with the complex number \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"4 + i\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), \"Nothing to it, is there? Here are some more for you to try.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), \"Before we get into dividing complex numbers, you\\u2019ll need to stretch your brain a bit and think back to that thing called a \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"conjugate\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), \"To form the conjugate of a \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"binomial\"), \", you simply change the sign between the two terms. Given the binomial \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"2 + 5x\"), \", the conjugate would be \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"2 - 5x\"), \". Given the binomial \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"3 - 8y\"), \", the conjugate would be \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"3 + 8y\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), \"And, since a complex number is also a binomial comprised of a real term and an\", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"imaginary term\"), \", given the complex number \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"5 - 3i\"), \", the complex conjugate would be \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"5 + 3i\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), \"Easy. Alright, now let\\u2019s get back to dividing complex numbers.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), \"The first step in dividing complex numbers is to multiply the numerator and denominator by the complex conjugate of the denominator. Don\\u2019t panic, it\\u2019s actually very simple. Take a look.\", React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"(3 -2i)/(5 + 4i)\"), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), \"To form the conjugate of the denominator, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"(5 + 4i)\"), \", simply change the sign between the two terms and get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"(5 - 4i)\"), \". Now, multiply numerator and denominator by the conjugate, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"(5 - 4i)\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"(3 -2i)(5 - 4i)/(5 + 4i)(5 - 4i)\"), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), \"FOIL the numerator: \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"15 - 12i - 10i + 8i^2)\"), \"\\xA0which becomes \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"-8\"), \"\\xA0and combine like terms to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"(7 - 22i)\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), \"FOIL the denominator: \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"25 - 20i + 20i - 16i^2)\"), \"\\xA0 which becomes \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"16\"), \", and combine like terms to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"41\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), \"You end up with \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"(7 - 22i)/41\"), \", but since complex numbers are technically two separate parts and therefore, shouldn\\u2019t share the \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"denominator\"), \", we split the answer into two parts like this\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"7/41 - (21/44)i\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), \"We\\u2019ll do another problem.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"(4 + 6i)/(-1 -3i)\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), \"First, multiply both \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"numerator\"), \" and \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"denominator\"), \" by the conjugate of the denominator, which is \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"(-1 + 3i)\"), \". Notice how the negative 1 does not change\\u2014only the sign between the two terms changes.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"(4 + 6i)(-1 -3i)/(-1 - 3i)(-1 + 3i)\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), \"FOIL the numerator: \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"-4 + 12i - 6i + 18i^2\"), \"\\xA0 which becomes\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"-18\"), \"\\xA0and combine like terms to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"(-22 + 12i)\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), \"FOIL the denominator: \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"1 - 3i + 3i -9i^2\"), \"\\xA0 which becomes\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"9\"), \"\\xA0 and combine like terms to get\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"10\"), \"\\xA0.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), \"You\\u2019re left with \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"-22 + 12i/10\"), \"\\xA0 which when split becomes \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"-22/10 +(12/10)i\"), \"; . However, you can further reduce each fraction, so your final answer is\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"-11/5 + (6/5)i\"), \".\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), \"Here are some problems for you to try.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"(3 - 2i)/(-4 - 7i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"(5 + 4i)/(2 + i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"(6 - 3i)/(9 + 3i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"(1 - 2i)/(5 - 8i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"(-7 + 4i)/(2 - 4i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"(3 + 3i)/(-3 - 3i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"(5 + i)/(4 - 5i)\"))))), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        color: \"blue-grey\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.pb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Problem\"), React.createElement(\"p\", {\n        className: classes.pb2,\n        style: {\n          borderStyle: 'solid',\n          borderBottomColor: '#9e9e9e',\n          borderWidth: '0 0 1px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Solve the following: (2 + 3i) / (-4 + 7i). Begin your work by first rewriting the problem in 'Step 1' in the worksheet.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: classes.pb3,\n        onClick: this.toggle(14),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"ADD YOUR OWN PROBLEM\")), React.createElement(MDBModal, {\n        isOpen: this.state.modal14,\n        toggle: this.toggle(14),\n        size: \"lg\",\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        toggle: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '28px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Add Your Own Problem\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '16px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Add your own problem in the form (a + bi) / (c + di). You can set the values of a, b, c, and d below.\"), React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        onChange: function onChange(e) {\n          _this2.setState({\n            a: e.target.value\n          });\n        },\n        label: \"a\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"b\",\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"c\",\n        className: \"mr-3 \",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        label: \"d\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#7e57c2',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }))), React.createElement(MDBModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple\",\n        size: \"md\",\n        onClick: this.toggle(14),\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(MDBBtn, {\n        className: \"orange accent-2\",\n        size: \"md\",\n        style: {\n          fontFamily: '\\'Roboto\\',sans-serif',\n          fontSize: '12px',\n          fontWeight: 'bolder'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Set\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"\".concat(classes.worksheet, \" px-3 py-3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: classes.ws,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"Worksheet\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, this.state.answers.map(function (item, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, \"step: index item\");\n      })), React.createElement(\"div\", {\n        className: \"p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        label: this.state.step,\n        className: \"mr-3\",\n        size: \"sm\",\n        style: {\n          border: 'solid',\n          borderColor: '#81c784',\n          borderWidth: '0 0 2px 0',\n          fontFamily: '\\'Roboto\\',sans-serif'\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      })), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        gradient: \"peach\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"thumbs-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      })), React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        gradient: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }), React.createElement(MDBCard, {\n        size: \"8\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100 green lighten-2\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.pb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, \"Hints/Feedback\"), React.createElement(\"p\", {\n        className: classes.pb2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"Hints and feedback will appear here. You will be given feedback when you click the yellow button above. Once you have received some basic feedback, the arrow buttons below will become purple (enabled) and you will be able to gain additional hints.\"), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        disabled: true,\n        className: \"grey lighten-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"angle-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      })), React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        disabled: true,\n        className: \"grey lighten-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"angle-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      })))))), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple lighten-1\",\n        className: \"\".concat(classes.btn, \" w-100 mt-3\"),\n        onClick: function onClick() {\n          _this2.props.history.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \"Previous Lesson\")), React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple lighten-1\",\n        className: \"\".concat(classes.btn, \" w-100 mt-3\"),\n        onClick: function onClick() {\n          _this2.props.history.push('/complex/page4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \"Next Lesson\"))));\n    }\n  }]);\n\n  return ComplexPage3;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\yuwei\\Desktop\\Front_End\\src\\page\\ComplexNumber\\Page\\page3.js"],"names":["React","Video","MDBRow","MDBCol","MDBBtn","MDBCard","MDBIcon","MDBModal","MDBInput","MDBModalFooter","InlineMath","BlockMath","classes","Input","ComplexPage3","props","toggle","nr","modalNumber","setState","state","post","option","method","headers","body","JSON","stringify","a","b","c","d","step","toString","value","fetch","then","response","text","answer","hint","substring","length","substr","arr","answers","push","modal14","isRight","event","target","title1","title2","font3","ph","high","border","ph2","boxShadow","borderRadius","pb","pb2","borderStyle","borderBottomColor","borderWidth","pb3","fontFamily","fontSize","fontWeight","e","borderColor","worksheet","ws","map","item","index","handleChange","btn","history","goBack","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,0BAApB;AACA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,OAAhC,EAAyCC,OAAzC,EAAiDC,QAAjD,EAA0DC,QAA1D,EAAoEC,cAApE,QAAyF,UAAzF;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,aAAtC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,KAAR,QAAoB,SAApB;AAGA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AACI,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAgBnBC,MAhBmB,GAgBV,UAAAC,EAAE;AAAA,aAAI,YAAM;AACjB,YAAIC,WAAW,GAAG,UAAUD,EAA5B;;AACA,cAAKE,QAAL,qBACKD,WADL,EACmB,CAAC,MAAKE,KAAL,CAAWF,WAAX,CADpB;AAGH,OALU;AAAA,KAhBQ;;AAAA,UA4BnBG,IA5BmB,GA4BZ,YAAI;AACP,UAAMC,MAAM,GAAC;AACTC,QAAAA,MAAM,EAAC,MADE;AAETC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFA;AAKTC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChB,eAAI,MAAKP,KAAL,CAAWQ,CADC;AAEhB,eAAI,MAAKR,KAAL,CAAWS,CAFC;AAGhB,eAAI,MAAKT,KAAL,CAAWU,CAHC;AAIhB,eAAI,MAAKV,KAAL,CAAWW,CAJC;AAKhB,kBAAO,MAAKX,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,EALS;AAMhB,oBAAS,MAAKb,KAAL,CAAWc;AANJ,SAAf;AALI,OAAb;AAcAC,MAAAA,KAAK,CAAC,qCAAD,EAAuCb,MAAvC,CAAL,CACKc,IADL,CACU,UAAAC,QAAQ;AAAA,eAAEA,QAAQ,CAACC,IAAT,EAAF;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAG,MAAM,EAAE;AACV,cAAKpB,QAAL,CAAc;AACVqB,UAAAA,IAAI,EAACD,MAAM,CAACE,SAAP,CAAiB,CAAjB,EAAmBF,MAAM,CAACG,MAA1B;AADK,SAAd;;AAGA,YAAIH,MAAM,CAACI,MAAP,CAAc,CAAd,EAAiB,CAAjB,MAAwB,GAA5B,EAAgC;AAC5B,cAAIC,GAAG,sBAAO,MAAKxB,KAAL,CAAWyB,OAAlB,CAAP;;AACA,cAAIb,IAAI,sBAAM,MAAKZ,KAAL,CAAWY,IAAjB,CAAR;;AACAY,UAAAA,GAAG,CAACE,IAAJ,CAAS,MAAK1B,KAAL,CAAWc,KAApB;AACAF,UAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;;AACA,gBAAKb,QAAL,CAAc;AACV0B,YAAAA,OAAO,EAACD,GADE;AAEVZ,YAAAA,IAAI,EAACA;AAFK,WAAd;AAIH;AACJ,OAhBL;AAiBH,KA5DkB;;AAEf,UAAKZ,KAAL,GAAa;AACT2B,MAAAA,OAAO,EAAE,KADA;AAETF,MAAAA,OAAO,EAAC,EAFC;AAGTjB,MAAAA,CAAC,EAAC,EAHO;AAITC,MAAAA,CAAC,EAAC,EAJO;AAKTC,MAAAA,CAAC,EAAC,EALO;AAMTC,MAAAA,CAAC,EAAC,EANO;AAOTG,MAAAA,KAAK,EAAC,EAPG;AAQTF,MAAAA,IAAI,EAAC,CARI;AASTQ,MAAAA,IAAI,EAAC,EATI;AAUTQ,MAAAA,OAAO,EAAC;AAVC,KAAb;AAFe;AAelB;;AAhBL;AAAA;AAAA,iCAuBiBC,KAvBjB,EAuBwB;AAEhB,WAAK9B,QAAL,CAAc;AACNe,QAAAA,KAAK,EAAEe,KAAK,CAACC,MAAN,CAAahB;AADd,OAAd;AAGH;AA5BL;AAAA;AAAA,6BA+Da;AAAA;;AAGL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAEtB,OAAO,CAACuC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAII;AAAK,QAAA,SAAS,EAAEvC,OAAO,CAACwC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CADJ,EAUI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,SAAS,EAAExC,OAAO,CAACyC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE,8DAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CAVJ,EAkBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAEzC,OAAO,CAAC0C,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFT,QAGM;AAAM,QAAA,SAAS,EAAE1C,OAAO,CAAC2C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHN,6BAGiF;AAAM,QAAA,SAAS,EAAE3C,OAAO,CAAC2C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHjF,cAG0I;AAAM,QAAA,SAAS,EAAE3C,OAAO,CAAC2C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAH1I,2BAIuB;AAAM,QAAA,SAAS,EAAE3C,OAAO,CAAC2C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJvB,cAKU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALV,2BAKkE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALlE,qCAMgC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANhC,oDAOU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPV,gBAOuD,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPvD,WAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAQS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QART,kJADJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,EAcI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAE3C,OAAO,CAAC4C,MAA3B;AAAmC,QAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAE5C,OAAO,CAAC6C,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,CADJ,CAdJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBJ,EAuBI;AAAG,QAAA,SAAS,EAAE7C,OAAO,CAAC0C,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFT,uEAGqE;AAAM,QAAA,SAAS,EAAE1C,OAAO,CAAC2C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHrE,0HAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAKS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALT,+BAM+B,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAN/B,uDAOuD,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPvD,sBAQiB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARjB,uBASU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATV,oEAUU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVV,qBAUyD,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVzD,sBAWgB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXhB,wDAYU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZV,WAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,EAaS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbT,qIAgBgB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAhBhB,sPAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,EAkBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBT,6BAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBJ,EAoBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBT,gBAuBU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAvBV,wCAwBU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBV,sBAwB6D,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxB7D,6CAyB2C,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzB3C,kBA0BgB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA1BhB,iDA2BU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA3BV,OA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BJ,EA4BS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BT,iEA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/BJ,EA+BS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/BT,sIAkCsC;AAAM,QAAA,SAAS,EAAE3C,OAAO,CAAC2C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAlCtC,OAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCJ,EAmCS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCT,iCAoC+B;AAAM,QAAA,SAAS,EAAE3C,OAAO,CAAC2C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApC/B,iFAqCU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCV,mCAsCU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtCV,+BAuCU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvCV,mCAwCU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxCV,OAyCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCJ,EAyCS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCT,oFA2CI;AAAM,QAAA,SAAS,EAAE3C,OAAO,CAAC2C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA3CJ,qCA4CU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5CV,2CA6CU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7CV,OA8CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9CJ,EA8CS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9CT,yEAiDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjDJ,EAiDS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjDT,yMAoDI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BApDJ,EAqDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArDJ,EAqDS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArDT,oDAuDU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvDV,iEAwDU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxDV,sEAyDU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzDV,OA0DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1DJ,EA0DS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1DT,EA4DI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CA5DJ,EA6DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7DJ,EA6DS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7DT,8BAgEU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAhEV,4BAiEU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjEV,4CAkEU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAlEV,OAmEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnEJ,EAmES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnET,gCAsEU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAtEV,6BAuEwB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvExB,0CAwEU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxEV,OAyEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzEJ,EAyES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzET,0BA4EU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA5EV,6GA8Ec;AAAM,QAAA,SAAS,EAAE3C,OAAO,CAAC2C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA9Ed,oDA+EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/EJ,EA+ES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/ET,EAgFI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAhFJ,OAiFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjFJ,EAiFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjFT,oCAmFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnFJ,EAmFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnFT,EAoFI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BApFJ,OAqFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArFJ,EAqFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArFT,2BAwFyB;AAAM,QAAA,SAAS,EAAE3C,OAAO,CAAC2C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAxFzB,WAwF6E;AAAM,QAAA,SAAS,EAAE3C,OAAO,CAAC2C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAxF7E,yDAyFU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAzFV,mGA2FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3FJ,EA2FS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3FT,EA4FI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CA5FJ,OA6FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7FJ,EA6FS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7FT,8BAgGU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAhGV,4BAiGuB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjGvB,4CAkGU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAlGV,OAmGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnGJ,EAmGS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnGT,gCAsGU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAtGV,4BAuGuB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvGvB,4CAwGuC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxGvC,WAyGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzGJ,EAyGS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzGT,gCA2GU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA3GV,wCA6GU,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA7GV,gFA+GI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/GJ,EA+GS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/GT,EAgHI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhHJ,OAiHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjHJ,EAiHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjHT,4CAmHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnHJ,EAmHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnHT,CAvBJ,EA6II,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAE3C,OAAO,CAAC4C,MAA3B;AAAmC,QAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAE5C,OAAO,CAAC6C,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,EAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BALJ,EAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BANJ,EAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPJ,CADJ,CA7IJ,CAJJ,CAlBJ,EAiLI,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AACI,QAAA,IAAI,EAAC,GADT;AAEI,QAAA,KAAK,EAAC,WAFV;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,SAAS,EAAC,iBAJd;AAKI,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC,MAAX;AAAmBC,UAAAA,YAAY,EAAC;AAAhC,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI;AAAG,QAAA,SAAS,EAAE/C,OAAO,CAACgD,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,EAQI;AACI,QAAA,SAAS,EAAEhD,OAAO,CAACiD,GADvB;AAEI,QAAA,KAAK,EAAE;AAACC,UAAAA,WAAW,EAAC,OAAb;AAAqBC,UAAAA,iBAAiB,EAAC,SAAvC;AAAkDC,UAAAA,WAAW,EAAC;AAA9D,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oIAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAKS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALT,CARJ,EAeI;AACI,QAAA,SAAS,EAAEpD,OAAO,CAACqD,GADvB;AAGI,QAAA,OAAO,EAAE,KAAKjD,MAAL,CAAY,EAAZ,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAfJ,CADJ,EAyBI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKI,KAAL,CAAW2B,OAA7B;AAAsC,QAAA,MAAM,EAAE,KAAK/B,MAAL,CAAY,EAAZ,CAA9C;AAA+D,QAAA,IAAI,EAAC,IAApE;AAAyE,QAAA,QAAQ,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,MAAM,EAAE,KAAKA,MAAL,CAAY,EAAZ,CADZ;AAGI,QAAA,KAAK,EAAE;AACHkD,UAAAA,UAAU,EAAC,uBADR;AAEHC,UAAAA,QAAQ,EAAC,MAFN;AAGHC,UAAAA,UAAU,EAAC;AAHR,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,EAaI;AACI,QAAA,KAAK,EAAE;AACHF,UAAAA,UAAU,EAAC,uBADR;AAEHC,UAAAA,QAAQ,EAAC,MAFN;AAGHC,UAAAA,UAAU,EAAC;AAHR,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAbJ,EAsBI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AACI,QAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACb,UAAA,MAAI,CAAClD,QAAL,CAAc;AACVS,YAAAA,CAAC,EAAEyC,CAAC,CAACnB,MAAF,CAAShB;AADF,WAAd;AAGH,SALL;AAOI,QAAA,KAAK,EAAC,GAPV;AAOc,QAAA,SAAS,EAAC,MAPxB;AAOgC,QAAA,IAAI,EAAC,IAPrC;AAO0C,QAAA,KAAK,EAAE;AAACsB,UAAAA,MAAM,EAAC,OAAR;AAAgBc,UAAAA,WAAW,EAAC,SAA5B;AAAuCN,UAAAA,WAAW,EAAC,WAAnD;AAA+DE,UAAAA,UAAU,EAAC;AAA1E,SAPjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAUI,oBAAC,QAAD;AAEI,QAAA,KAAK,EAAC,GAFV;AAEc,QAAA,SAAS,EAAC,MAFxB;AAE+B,QAAA,IAAI,EAAC,IAFpC;AAEyC,QAAA,KAAK,EAAE;AAACV,UAAAA,MAAM,EAAC,OAAR;AAAgBc,UAAAA,WAAW,EAAC,SAA5B;AAAuCN,UAAAA,WAAW,EAAC,WAAnD;AAA+DE,UAAAA,UAAU,EAAC;AAA1E,SAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAcI,oBAAC,QAAD;AAEI,QAAA,KAAK,EAAC,GAFV;AAEc,QAAA,SAAS,EAAC,OAFxB;AAEgC,QAAA,IAAI,EAAC,IAFrC;AAE0C,QAAA,KAAK,EAAE;AAACV,UAAAA,MAAM,EAAC,OAAR;AAAgBc,UAAAA,WAAW,EAAC,SAA5B;AAAuCN,UAAAA,WAAW,EAAC,WAAnD;AAA+DE,UAAAA,UAAU,EAAC;AAA1E,SAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,EAkBI,oBAAC,QAAD;AAEI,QAAA,KAAK,EAAC,GAFV;AAEc,QAAA,IAAI,EAAC,IAFnB;AAEwB,QAAA,KAAK,EAAE;AAACV,UAAAA,MAAM,EAAC,OAAR;AAAgBc,UAAAA,WAAW,EAAC,SAA5B;AAAuCN,UAAAA,WAAW,EAAC,WAAnD;AAA+DE,UAAAA,UAAU,EAAC;AAA1E,SAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,CAtBJ,CADJ,EAgDI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,aADV;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,QAAA,OAAO,EAAE,KAAKlD,MAAL,CAAY,EAAZ,CAHb;AAII,QAAA,KAAK,EAAE;AACHkD,UAAAA,UAAU,EAAC,uBADR;AAEHC,UAAAA,QAAQ,EAAC,MAFN;AAGHC,UAAAA,UAAU,EAAC;AAHR,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAYI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAC,iBADd;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,QAAA,KAAK,EAAE;AACHF,UAAAA,UAAU,EAAC,uBADR;AAEHC,UAAAA,QAAQ,EAAC,MAFN;AAGHC,UAAAA,UAAU,EAAC;AAHR,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZJ,CAhDJ,CAzBJ,EAgGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhGJ,EAiGI;AAAK,QAAA,SAAS,YAAKxD,OAAO,CAAC2D,SAAb,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAE3D,OAAO,CAAC4D,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKpD,KAAL,CAAWyB,OAAX,CAAmB4B,GAAnB,CAAuB,UAACC,IAAD,EAAOC,KAAP,EAAe;AACnC,eAAO;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,OAFA,CADL,CAJJ,EASI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AACI,QAAA,KAAK,EAAE,KAAKvD,KAAL,CAAWY,IADtB;AAEI,QAAA,SAAS,EAAC,MAFd;AAGI,QAAA,IAAI,EAAC,IAHT;AAII,QAAA,KAAK,EAAE;AAACwB,UAAAA,MAAM,EAAC,OAAR;AAAgBc,UAAAA,WAAW,EAAC,SAA5B;AAAuCN,UAAAA,WAAW,EAAC,WAAnD;AAA+DE,UAAAA,UAAU,EAAC;AAA1E,SAJX;AAKI,QAAA,QAAQ,EAAE,KAAKU,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CATJ,EAmBI,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,GAAZ;AAAgB,QAAA,QAAQ,MAAxB;AAAyB,QAAA,QAAQ,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,GAAZ;AAAgB,QAAA,QAAQ,MAAxB;AAAyB,QAAA,QAAQ,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CAnBJ,CAjGJ,EAiII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjIJ,EAkII,oBAAC,OAAD;AACI,QAAA,IAAI,EAAC,GADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,SAAS,EAAC,iCAHd;AAII,QAAA,KAAK,EAAE;AAAClB,UAAAA,SAAS,EAAC,MAAX;AAAmBC,UAAAA,YAAY,EAAC;AAAhC,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AAAG,QAAA,SAAS,EAAE/C,OAAO,CAACgD,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,EAOI;AAAG,QAAA,SAAS,EAAEhD,OAAO,CAACiD,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mQAPJ,EASI,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,GAAZ;AAAgB,QAAA,QAAQ,MAAxB;AAAyB,QAAA,QAAQ,MAAjC;AAAkC,QAAA,SAAS,EAAC,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,GAAZ;AAAgB,QAAA,QAAQ,MAAxB;AAAyB,QAAA,QAAQ,MAAjC;AAAkC,QAAA,SAAS,EAAC,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CATJ,CAlIJ,CADJ,CAjLJ,EA0UI,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,uBADV;AAEI,QAAA,SAAS,YAAKjD,OAAO,CAACiE,GAAb,gBAFb;AAGI,QAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAAC9D,KAAL,CAAW+D,OAAX,CAAmBC,MAAnB;AAA6B,SAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,EAQI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,uBADV;AAEI,QAAA,SAAS,YAAKnE,OAAO,CAACiE,GAAb,gBAFb;AAGI,QAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAAC9D,KAAL,CAAW+D,OAAX,CAAmBhC,IAAnB,CAAwB,gBAAxB;AAA2C,SAH/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CARJ,CA1UJ,CADJ;AA8VH;AAhaL;;AAAA;AAAA,EAAkC9C,KAAK,CAACgF,SAAxC","sourcesContent":["import React from 'react';\nimport {Video} from \"../video-component/video\";\nimport {MDBRow, MDBCol, MDBBtn, MDBCard, MDBIcon,MDBModal,MDBInput, MDBModalFooter} from 'mdbreact'\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css'\nimport {Input} from \"./Input\";\n\n\nexport class ComplexPage3 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal14: false,\n            answers:[],\n            a:'',\n            b:'',\n            c:'',\n            d:'',\n            value:'',\n            step:1,\n            hint:'',\n            isRight:true\n        };\n\n    }\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr\n        this.setState({\n            [modalNumber]: !this.state[modalNumber]\n        });\n    }\n    handleChange(event) {\n\n        this.setState({\n                value: event.target.value,\n            });\n    }\n    post = ()=>{\n        const option={\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body:JSON.stringify({\n                \"A\":this.state.a,\n                \"B\":this.state.b,\n                \"C\":this.state.c,\n                \"D\":this.state.d,\n                \"step\":this.state.step.toString(),\n                \"answer\":this.state.value,\n            })\n        };\n        fetch('http://127.0.0.1:5000/complexnumber',option)\n            .then(response=>response.text())\n            .then(answer=>{\n                this.setState({\n                    hint:answer.substring(1,answer.length)\n                })\n                if (answer.substr(0, 1) === '1'){\n                    let arr = [...this.state.answers];\n                    let step= [...this.state.step];\n                    arr.push(this.state.value)\n                    step = step + 1\n                    this.setState({\n                        answers:arr,\n                        step:step\n                    })\n                }\n            })\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                    <div className={classes.title1}>\n                        COMPLEX NUMBERS:\n                    </div>\n                    <div className={classes.title2}>\n                        &nbsp;Division\n                    </div>\n                </div>\n\n                <MDBRow>\n                    <MDBCol size=\"3\">\n\n                    </MDBCol>\n                    <MDBCol size=\"6\" className={classes.font3}>\n                        <Video url={'https://alistempirefoundation.org/assets/dividingcomplex.mp4'}/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol size=\"3\">\n\n                    </MDBCol>\n                    <MDBCol size=\"6\">\n                        <p className={classes.ph}>\n                            Dividing complex numbers can be a lot more challenging.\n                            <tr/><br/>\n                            A <span className={classes.high}>complex number</span> is a combination of a <span className={classes.high}>real number</span> and an <span className={classes.high}>imaginary number</span>.\n                            We generally write <span className={classes.high}>complex numbers</span> in\n                            &nbsp;<InlineMath>a + bi</InlineMath>&nbsp;form, where  &nbsp;<InlineMath>a</InlineMath>&nbsp;\n                            is the real number and&nbsp;<InlineMath>bi</InlineMath>&nbsp;is the imaginary number. For example,\n                            &nbsp;<InlineMath>3 + 7i</InlineMath>&nbsp;or&nbsp;<InlineMath>5 - 2i</InlineMath>&nbsp;.\n                            <tr/><br/>\n                            Typically, whether adding, subtracting, multiplying or dividing complex numbers, we enclose each complex number inside parentheses like this:\n                        </p>\n                        <br/>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                <BlockMath>(6 - 5i) + (2 + 3i)</BlockMath>\n                                <BlockMath>(4 + 8i) - (3 - 2i)</BlockMath>\n                                <BlockMath>(7 - 4i)(5 + 9i)</BlockMath>\n                                <BlockMath>(8 - 6i)/(1- 3i)</BlockMath>\n                            </p>\n                        </MDBRow>\n                        <br/>\n                        <p className={classes.ph}>\n                            Dividing complex numbers can be a lot more challenging.\n                            <tr/><br/>\n                            When adding or subtracting complex numbers, you can only combine <span className={classes.high}>like terms</span>,\n                            meaning you can only combine the real part of each number together and the imaginary part of each number together.\n                            <tr/><br/>\n                            So, using the problem&nbsp;<InlineMath>(6 - 5i) + (2 + 3i)</InlineMath>\n                            , you would first combine the real parts, the&nbsp;<InlineMath>6</InlineMath>&nbsp;\n                            and the&nbsp;<InlineMath>2</InlineMath>&nbsp;, to get\n                            &nbsp;<InlineMath>8</InlineMath>&nbsp;; and then you would combine the imaginary parts, the\n                            &nbsp;<InlineMath>-5i</InlineMath>&nbsp;and the&nbsp;<InlineMath>3i</InlineMath>&nbsp;,\n                            to get&nbsp;<InlineMath>-2i</InlineMath>&nbsp;. This leaves you with the complex number\n                            &nbsp;<InlineMath>8 - 2i</InlineMath>&nbsp;.\n                            <tr/><br/>\n\n                            On a side note, since we are dealing with addition, you could also simply rewrite the problem without the parentheses,\n                            &nbsp;&nbsp;<InlineMath>(6 - 5i) + (2 + 3i)</InlineMath>, and then combine like terms.\n                            That’s completely legal in the case of an addition problem, but keep in mind it doesn’t work exactly like that for subtraction. We’ll talk about that when we discuss subtracting complex numbers.\n                            <tr/><br/>\n                            Let’s try another.\n                            <tr/><br/>\n\n                            Given\n                            &nbsp;<InlineMath>(-3 + 2i) + (7 - i)</InlineMath>&nbsp;. Combine the real parts,\n                            &nbsp;<InlineMath>-3 + 7</InlineMath>&nbsp;, to get&nbsp;<InlineMath>4</InlineMath>.\n                            Then combine the imaginary parts,&nbsp;<InlineMath>2i - i</InlineMath>,\n                            to get&nbsp;<InlineMath>i</InlineMath>. You are left with the complex number\n                            &nbsp;<InlineMath>4 + i</InlineMath>.\n                            <tr/><br/>\n\n                            Nothing to it, is there? Here are some more for you to try.\n                            <tr/><br/>\n\n                            Before we get into dividing complex numbers, you’ll need to stretch your brain a bit and\n                            think back to that thing called a <span className={classes.high}>conjugate</span>.\n                            <tr/><br/>\n                            To form the conjugate of a <span className={classes.high}>binomial</span>, you simply change the sign between the two terms. Given the binomial\n                            &nbsp;<InlineMath>2 + 5x</InlineMath>, the conjugate would be\n                            &nbsp;<InlineMath>2 - 5x</InlineMath>. Given the binomial\n                            &nbsp;<InlineMath>3 - 8y</InlineMath>, the conjugate would be\n                            &nbsp;<InlineMath>3 + 8y</InlineMath>.\n                            <tr/><br/>\n                            And, since a complex number is also a binomial comprised of a real term and an\n                            <span className={classes.high}>imaginary term</span>, given the complex number\n                            &nbsp;<InlineMath>5 - 3i</InlineMath>, the complex conjugate would be\n                            &nbsp;<InlineMath>5 + 3i</InlineMath>.\n                            <tr/><br/>\n\n                            Easy. Alright, now let’s get back to dividing complex numbers.\n                            <tr/><br/>\n\n                            The first step in dividing complex numbers is to multiply the numerator and denominator by the complex conjugate of the denominator. Don’t panic, it’s actually very simple. Take a look.\n                            <BlockMath>(3 -2i)/(5 + 4i)</BlockMath>\n                            <tr/><br/>\n                            To form the conjugate of the denominator,\n                            &nbsp;<InlineMath>(5 + 4i)</InlineMath>, simply change the sign between the two terms and get\n                            &nbsp;<InlineMath>(5 - 4i)</InlineMath>. Now, multiply numerator and denominator by the conjugate,\n                            &nbsp;<InlineMath>(5 - 4i)</InlineMath>.\n                            <tr/><br/>\n\n                            <BlockMath>(3 -2i)(5 - 4i)/(5 + 4i)(5 - 4i)</BlockMath>\n                            <tr/><br/>\n\n                            FOIL the numerator:\n                            &nbsp;<InlineMath>15 - 12i - 10i + 8i^2)</InlineMath>&nbsp;which becomes\n                            &nbsp;<InlineMath>-8</InlineMath>&nbsp;and combine like terms to get\n                            &nbsp;<InlineMath>(7 - 22i)</InlineMath>.\n                            <tr/><br/>\n\n                            FOIL the denominator:\n                            &nbsp;<InlineMath>25 - 20i + 20i - 16i^2)</InlineMath>&nbsp;\n                            which becomes &nbsp;<InlineMath>16</InlineMath>, and combine like terms to get\n                            &nbsp;<InlineMath>41</InlineMath>.\n                            <tr/><br/>\n\n                            You end up with\n                            &nbsp;<InlineMath>(7 - 22i)/41</InlineMath>\n                            , but since complex numbers are technically two separate parts and therefore, shouldn’t\n                            share the <span className={classes.high}>denominator</span>, we split the answer into two parts like this\n                            <tr/><br/>\n                            <BlockMath>7/41 - (21/44)i</BlockMath>.\n                            <tr/><br/>\n                            We’ll do another problem.\n                            <tr/><br/>\n                            <BlockMath>(4 + 6i)/(-1 -3i)</BlockMath>.\n                            <tr/><br/>\n\n\n                            First, multiply both <span className={classes.high}>numerator</span> and <span className={classes.high}>denominator</span> by the conjugate of the denominator, which is\n                            &nbsp;<InlineMath>(-1 + 3i)</InlineMath>. Notice how the negative 1 does not change—only\n                            the sign between the two terms changes.\n                            <tr/><br/>\n                            <BlockMath>(4 + 6i)(-1 -3i)/(-1 - 3i)(-1 + 3i)</BlockMath>.\n                            <tr/><br/>\n\n                            FOIL the numerator:\n                            &nbsp;<InlineMath>-4 + 12i - 6i + 18i^2</InlineMath>&nbsp;\n                            which becomes&nbsp;<InlineMath>-18</InlineMath>&nbsp;and combine like terms to get\n                            &nbsp;<InlineMath>(-22 + 12i)</InlineMath>.\n                            <tr/><br/>\n\n                            FOIL the denominator:\n                            &nbsp;<InlineMath>1 - 3i + 3i -9i^2</InlineMath>&nbsp;\n                            which becomes&nbsp;<InlineMath>9</InlineMath>&nbsp;\n                            and combine like terms to get&nbsp;<InlineMath>10</InlineMath>&nbsp;.\n                            <tr/><br/>\n                            You’re left with\n                            &nbsp;<InlineMath>-22 + 12i/10</InlineMath>&nbsp;\n                            which when split becomes\n                            &nbsp;<InlineMath>-22/10 +(12/10)i</InlineMath>; . However, you can further reduce each fraction,\n                            so your final answer is\n                            <tr/><br/>\n                            <BlockMath>-11/5 + (6/5)i</BlockMath>.\n                            <tr/><br/>\n                            Here are some problems for you to try.\n                            <tr/><br/>\n                        </p>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                <BlockMath>(3 - 2i)/(-4 - 7i)</BlockMath>\n                                <BlockMath>(5 + 4i)/(2 + i)</BlockMath>\n                                <BlockMath>(6 - 3i)/(9 + 3i)</BlockMath>\n                                <BlockMath>(1 - 2i)/(5 - 8i)</BlockMath>\n                                <BlockMath>(-7 + 4i)/(2 - 4i)</BlockMath>\n                                <BlockMath>(3 + 3i)/(-3 - 3i)</BlockMath>\n                                <BlockMath>(5 + i)/(4 - 5i)</BlockMath>\n\n                            </p>\n                        </MDBRow>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow center>\n                    <MDBCol size=\"8\">\n                        <MDBCard\n                            size=\"8\"\n                            color=\"blue-grey\"\n                            text=\"white\"\n                            className=\"py-3 px-3 w-100\"\n                            style={{boxShadow:'none', borderRadius:'0'}}\n                        >\n                            <p className={classes.pb}>Problem</p>\n                            <p\n                                className={classes.pb2}\n                                style={{borderStyle:'solid',borderBottomColor:'#9e9e9e', borderWidth:'0 0 1px 0'}}\n                            >\n                                Solve the following: (2 + 3i) / (-4 + 7i). Begin your work by first rewriting the problem in 'Step 1' in the worksheet.\n                                <tr/><br/>\n                            </p>\n                            <p\n                                className={classes.pb3}\n\n                                onClick={this.toggle(14)}\n                            >\n                                ADD YOUR OWN PROBLEM\n                            </p>\n                        </MDBCard>\n\n                        <MDBModal isOpen={this.state.modal14} toggle={this.toggle(14)} size=\"lg\" centered>\n                            <div className=\"p-3\">\n                                <div\n                                    toggle={this.toggle(14)}\n\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'28px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >\n                                    Add Your Own Problem\n                                </div>\n                                <br/>\n                                <div\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'16px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >\n                                    Add your own problem in the form (a + bi) / (c + di). You can set the values of a, b, c, and d below.\n                                </div>\n                                <div className=\"d-flex justify-content-between\">\n                                    <MDBInput\n                                        onChange={(e) => {\n                                            this.setState({\n                                                a: e.target.value\n                                            });\n                                        }}\n\n                                        label=\"a\" className=\"mr-3\"  size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                    <MDBInput\n\n                                        label=\"b\" className=\"mr-3\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                    <MDBInput\n\n                                        label=\"c\" className=\"mr-3 \" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                    <MDBInput\n\n                                        label=\"d\" size=\"sm\" style={{border:'solid',borderColor:'#7e57c2', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    />\n                                </div>\n                            </div>\n\n                            <MDBModalFooter>\n                                <MDBBtn\n                                    color=\"deep-purple\"\n                                    size=\"md\"\n                                    onClick={this.toggle(14)}\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'12px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >Cancel\n                                </MDBBtn>\n                                <MDBBtn\n                                    className=\"orange accent-2\"\n                                    size=\"md\"\n                                    style={{\n                                        fontFamily:'\\'Roboto\\',sans-serif',\n                                        fontSize:'12px',\n                                        fontWeight:'bolder'\n                                    }}\n                                >Set</MDBBtn>\n                            </MDBModalFooter>\n                        </MDBModal>\n                        <br/>\n                        <div className={`${classes.worksheet} px-3 py-3`}>\n                            <label className={classes.ws}>\n                                Worksheet\n                            </label>\n                            <div>\n                                {this.state.answers.map((item, index)=>{\n                                    return <div key={index}>step: index item</div>\n                                })}\n                            </div>\n                            <div className=\"p-3\">\n                                <MDBInput\n                                    label={this.state.step}\n                                    className=\"mr-3\"\n                                    size=\"sm\"\n                                    style={{border:'solid',borderColor:'#81c784', borderWidth:'0 0 2px 0',fontFamily:'\\'Roboto\\',sans-serif',}}\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n\n                            <MDBRow center>\n                                <MDBBtn tag=\"a\" floating gradient=\"peach\">\n                                    <MDBIcon icon=\"thumbs-up\" />\n                                </MDBBtn>\n                                <MDBBtn tag=\"a\" floating gradient=\"blue\">\n                                    <MDBIcon icon=\"check\" />\n                                </MDBBtn>\n                                {/*<MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">*/}\n                                    {/*<MDBIcon icon=\"clipboard-check\" />*/}\n                                {/*</MDBBtn>*/}\n                            </MDBRow>\n\n                        </div>\n                        <br/>\n                        <MDBCard\n                            size=\"8\"\n                            text=\"white\"\n                            className=\"py-3 px-3 w-100 green lighten-2\"\n                            style={{boxShadow:'none', borderRadius:'0'}}\n                        >\n                            <p className={classes.pb}>Hints/Feedback</p>\n                            <p className={classes.pb2}>Hints and feedback will appear here. You will be given feedback when you click the yellow button above. Once you have received\n                                some basic feedback, the arrow buttons below will become purple (enabled) and you will be able to gain additional hints.</p>\n                            <MDBRow center>\n                                <MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">\n                                    <MDBIcon icon=\"angle-left\" />\n                                </MDBBtn>\n                                <MDBBtn tag=\"a\" floating disabled className=\"grey lighten-1\">\n                                    <MDBIcon icon=\"angle-right\" />\n                                </MDBBtn>\n                            </MDBRow>\n\n                        </MDBCard>\n                    </MDBCol>\n\n                </MDBRow>\n                <MDBRow center>\n                    <MDBCol size=\"2\">\n                        <MDBBtn\n                            color=\"deep-purple lighten-1\"\n                            className={`${classes.btn} w-100 mt-3`}\n                            onClick={() => {this.props.history.goBack();}}\n                        >Previous Lesson</MDBBtn>\n                    </MDBCol>\n                    <MDBCol size=\"2\">\n                        <MDBBtn\n                            color=\"deep-purple lighten-1\"\n                            className={`${classes.btn} w-100 mt-3`}\n                            onClick={() => {this.props.history.push('/complex/page4');}}\n                        >Next Lesson</MDBBtn>\n                    </MDBCol>\n                </MDBRow>\n            </div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}