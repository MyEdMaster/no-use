{"ast":null,"code":"import _classCallCheck from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/Front_End/src/page/RRH/Page/end.js\";\nimport React from 'react';\nimport classes from '../../ComplexNumber/Page/index.module.css';\nimport classes2 from './index.module.css';\nimport { AskQuestion } from \"../Component/ask-question\";\nimport { MDBBtn, MDBCard, MDBCol, MDBIcon, MDBModalBody, MDBRow } from \"mdbreact\";\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nvar recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\nexport var End =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(End, _React$Component);\n\n  function End(props) {\n    var _this;\n\n    _classCallCheck(this, End);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(End).call(this, props));\n    _this.state = {\n      listening: false,\n      speechState: 'Click to start...',\n      hints: '',\n      question: '',\n      answer: ''\n    };\n    _this.toggleListen = _this.toggleListen.bind(_assertThisInitialized(_this));\n    _this.handleListen = _this.handleListen.bind(_assertThisInitialized(_this));\n    return _this;\n  } //--------------Speech Recognition--------------\n\n\n  _createClass(End, [{\n    key: \"toggleListen\",\n    value: function toggleListen() {\n      this.setState({\n        listening: !this.state.listening\n      }, this.handleListen);\n    }\n  }, {\n    key: \"handleListen\",\n    value: function handleListen() {\n      var _this2 = this;\n\n      console.log('listening?', this.state.listening);\n\n      if (this.state.listening) {\n        recognition.start();\n\n        recognition.onend = function () {\n          _this2.setState({\n            speechState: '...continue listening...'\n          });\n\n          recognition.start();\n        };\n      } else {\n        recognition.stop();\n\n        recognition.onend = function () {\n          _this2.setState({\n            speechState: 'Click to start...'\n          });\n        };\n      }\n\n      recognition.onstart = function () {\n        _this2.setState({\n          speechState: 'Listening...Click to pause'\n        });\n      };\n\n      var finalTranscript = '';\n\n      recognition.onresult = function (event) {\n        var interimTranscript = '';\n\n        for (var i = event.resultIndex; i < event.results.length; i++) {\n          var transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) finalTranscript += transcript + ' ';else interimTranscript += transcript;\n        }\n\n        _this2.setState({\n          answer: finalTranscript\n        });\n\n        document.getElementById('interim').innerHTML = interimTranscript;\n        document.getElementById('final').value = finalTranscript; //-------------------------COMMANDS------------------------------------\n\n        var transcriptArr = finalTranscript.split(' ');\n        var stopCmd = transcriptArr.slice(-3, -1);\n        console.log('stopCmd', stopCmd);\n\n        if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening') {\n          recognition.stop();\n\n          recognition.onend = function () {\n            console.log('Stopped listening per command');\n            var finalText = transcriptArr.slice(0, -3).join(' ');\n            document.getElementById('final').value = finalText;\n          };\n        }\n      }; //-----------------------------------------------------------------------\n\n\n      recognition.onerror = function (event) {\n        console.log(\"Error occurred in recognition: \" + event.error);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"\".concat(classes.body, \" align-content-center w-100 h-100 text-center\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(AskQuestion, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-flex align-items-baseline justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Q & A\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes2.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Great! Now you read the story and we have some question for you to answer.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes2.border,\n        style: {\n          borderWidth: '1px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes2.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"What is the format of a dividing complex numbers problem?\"), React.createElement(\"div\", {\n        className: \"d-flex justify-content-center align-content-start mt-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-grow-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"final\",\n        className: \"form-control form-control-lg \".concat(classes.searchInput),\n        placeholder: \"Ask your question here\",\n        style: {\n          borderStyle: 'solid',\n          borderWidth: '1px',\n          borderColor: '#81c784',\n          borderRadius: '15px',\n          fontFamily: '\\'Rajdhani\\', sans-serif',\n          fontSize: '22px'\n        },\n        onChange: function onChange(e) {\n          var str = e.target.value;\n\n          _this3.setState({\n            answer: str\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        color: \"green\",\n        style: {\n          margin: '6px'\n        },\n        onClick: function onClick() {\n          _this3.searchAnswer(_this3.state.redQuestion);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"ml-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        color: \"purple lighten-2\",\n        style: {\n          margin: '6px'\n        },\n        onClick: this.toggleListen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"microphone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes2.body2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.state.speechState), React.createElement(\"div\", {\n        id: \"interim\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        text: \"white\",\n        className: \"py-1 px-3 w-100\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '0px',\n          backgroundColor: '#e8eaf6'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes2.pb2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, this.state.answer)))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          padding: '30px 0 250px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: function onClick() {\n          _this3.props.history.goBack();\n        },\n        className: classes2.a,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"\\xAB Previous\"), React.createElement(\"div\", {\n        onClick: function onClick() {\n          _this3.props.history.push('/rrh/cover');\n        },\n        className: classes2.a,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Again \\xBB\")));\n    }\n  }]);\n\n  return End;\n}(React.Component);","map":{"version":3,"sources":["/Users/vivian/Desktop/Front_End/src/page/RRH/Page/end.js"],"names":["React","classes","classes2","AskQuestion","MDBBtn","MDBCard","MDBCol","MDBIcon","MDBModalBody","MDBRow","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","End","props","state","listening","speechState","hints","question","answer","toggleListen","bind","handleListen","setState","console","log","start","onend","stop","onstart","finalTranscript","onresult","event","interimTranscript","i","resultIndex","results","length","transcript","isFinal","document","getElementById","innerHTML","value","transcriptArr","split","stopCmd","slice","finalText","join","onerror","error","body","title1","ph","border","borderWidth","searchInput","borderStyle","borderColor","borderRadius","fontFamily","fontSize","e","str","target","margin","searchAnswer","redQuestion","body2","boxShadow","backgroundColor","pb2","padding","history","goBack","a","push","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classes from '../../ComplexNumber/Page/index.module.css';\nimport classes2 from './index.module.css'\n\nimport {AskQuestion} from \"../Component/ask-question\";\nimport {MDBBtn, MDBCard, MDBCol, MDBIcon, MDBModalBody, MDBRow} from \"mdbreact\";\n\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\n\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n\nexport class End extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listening: false,\n            speechState:'Click to start...',\n            hints:'',\n            question:'',\n            answer:'',\n        };\n        this.toggleListen = this.toggleListen.bind(this)\n        this.handleListen = this.handleListen.bind(this)\n    }\n\n    //--------------Speech Recognition--------------\n    toggleListen() {\n        this.setState({\n            listening: !this.state.listening\n        }, this.handleListen)\n    }\n\n    handleListen() {\n\n        console.log('listening?', this.state.listening)\n\n        if (this.state.listening) {\n            recognition.start();\n            recognition.onend = () => {\n                this.setState({\n                    speechState:'...continue listening...'\n                });\n                recognition.start()\n            }\n\n        } else {\n            recognition.stop();\n            recognition.onend = () => {\n                this.setState({\n                    speechState:'Click to start...'\n                });\n            }\n        }\n\n        recognition.onstart = () => {\n            this.setState({\n                speechState:'Listening...Click to pause'\n            });\n        };\n\n        let finalTranscript = '';\n        recognition.onresult = event => {\n            let interimTranscript = '';\n\n            for (let i = event.resultIndex; i < event.results.length; i++) {\n                const transcript = event.results[i][0].transcript;\n                if (event.results[i].isFinal) finalTranscript += transcript + ' ';\n                else interimTranscript += transcript;\n            }\n\n            this.setState({\n                answer:finalTranscript\n            });\n            document.getElementById('interim').innerHTML = interimTranscript;\n            document.getElementById('final').value = finalTranscript;\n\n            //-------------------------COMMANDS------------------------------------\n\n            const transcriptArr = finalTranscript.split(' ');\n            const stopCmd = transcriptArr.slice(-3, -1);\n            console.log('stopCmd', stopCmd);\n\n            if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening'){\n                recognition.stop();\n                recognition.onend = () => {\n                    console.log('Stopped listening per command');\n                    const finalText = transcriptArr.slice(0, -3).join(' ');\n                    document.getElementById('final').value = finalText\n                }\n            }\n        }\n\n        //-----------------------------------------------------------------------\n\n        recognition.onerror = event => {\n            console.log(\"Error occurred in recognition: \" + event.error)\n        }\n\n    }\n\n    render() {\n        return (\n            <div className={`${classes.body} align-content-center w-100 h-100 text-center`}>\n                <AskQuestion/>\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                    <div className={classes.title1}>\n                        Q & A\n                    </div>\n                </div>\n                <MDBRow>\n                    <MDBCol size=\"2\">\n\n                    </MDBCol>\n                    <MDBCol size=\"8\">\n                        <div className={classes2.ph}>\n                            Great! Now you read the story and we have some question for you to answer.\n                        </div>\n                        <br/>\n\n                        <div className={classes2.border} style={{borderWidth:'1px'}}>\n\n                            <p className={classes2.ph}>\n                                What is the format of a dividing complex numbers problem?\n                            </p>\n\n                            <div className=\"d-flex justify-content-center align-content-start mt-3 mb-3\">\n                                <div className=\"flex-grow-1\">\n                                    <input\n                                        id='final'\n                                        className={`form-control form-control-lg ${classes.searchInput}`}\n                                        placeholder=\"Ask your question here\"\n                                        style={{\n                                            borderStyle:'solid',\n                                            borderWidth:'1px',\n                                            borderColor:'#81c784',\n                                            borderRadius:'15px',\n                                            fontFamily:'\\'Rajdhani\\', sans-serif',\n                                            fontSize:'22px',\n                                        }}\n                                        onChange={(e) => {\n                                            const str=e.target.value\n                                            this.setState({\n                                                answer: str\n                                            });\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"ml-3\">\n                                    <MDBBtn\n                                        tag=\"a\" floating color=\"green\" style={{margin:'6px'}}\n                                        onClick={()=>{this.searchAnswer(this.state.redQuestion)}}\n                                    >\n                                        <MDBIcon icon=\"question\" />\n                                    </MDBBtn>\n                                </div>\n                                <div className=\"ml-1\">\n                                    <MDBBtn\n                                        tag=\"a\" floating color=\"purple lighten-2\" style={{margin:'6px'}}\n                                        onClick={this.toggleListen}\n                                    >\n                                        <MDBIcon icon=\"microphone\" />\n                                    </MDBBtn>\n\n                                </div>\n                            </div>\n                            <div>\n                                <div className={classes2.body2}>{this.state.speechState}</div>\n                                <div id='interim'></div>\n                            </div>\n                            <div className=\"mt-3\">\n                                <MDBCard\n                                    size=\"8\"\n                                    text=\"white\"\n                                    className=\"py-1 px-3 w-100\"\n                                    style={{boxShadow:'none', borderRadius:'0px',backgroundColor:'#e8eaf6'}}\n                                >\n                                    {/*<p*/}\n                                        {/*style={{borderStyle:'solid',borderColor:'#54B948',borderWidth:'0 0 0 0'}}*/}\n                                        {/*className={classes2.pb1}*/}\n                                    {/*>Hints/Feedback</p>*/}\n\n                                    <p className={classes2.pb2}>{this.state.answer}</p>\n                                </MDBCard>\n                            </div>\n                        </div>\n                        <br/>\n\n                    </MDBCol>\n\n                </MDBRow>\n                <div style={{padding:'30px 0 250px 0'}}>\n                    <div\n                        onClick={() => {this.props.history.goBack();}}\n                        className={classes2.a}>&laquo; Previous\n                    </div>\n                    <div\n                        onClick={() => {this.props.history.push('/rrh/cover');}}\n                        className={classes2.a}>Again &raquo;\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}