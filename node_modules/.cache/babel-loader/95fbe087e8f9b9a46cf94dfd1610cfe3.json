{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\src\\\\page\\\\RRH\\\\Component\\\\SpeakRRH\\\\index.js\";\n\nimport React, { useState } from \"react\";\nimport { useSpeechRecognition } from \"react-speech-kit\";\nimport { MDBIcon, MDBBtn, MDBInput, MDBRow } from 'mdbreact';\nexport var SpeakRecog = function SpeakRecog() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useSpeechRecognition = useSpeechRecognition({\n    onResult: function onResult(result) {\n      setValue(result);\n    }\n  }),\n      listen = _useSpeechRecognition.listen,\n      listening = _useSpeechRecognition.listening,\n      stop = _useSpeechRecognition.stop;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    value: value,\n    onChange: function onChange(event) {\n      return setValue(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(MDBBtn, {\n    tag: \"a\",\n    floating: true,\n    className: \" orange lighten-2\",\n    onMouseDown: listen,\n    onMouseUp: stop,\n    onClick: _this.props.recog(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(MDBIcon, {\n    icon: \"microphone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), listening && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Go ahead I'm listening\"));\n};","map":{"version":3,"sources":["C:\\Users\\yuwei\\Desktop\\Front_End\\src\\page\\RRH\\Component\\SpeakRRH\\index.js"],"names":["React","useState","useSpeechRecognition","MDBIcon","MDBBtn","MDBInput","MDBRow","SpeakRecog","value","setValue","onResult","result","listen","listening","stop","event","target","props","recog"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAAQC,OAAR,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,MAAnC,QAAgD,UAAhD;AAGA,OAAO,IAAMC,UAAU,GAAC,SAAXA,UAAW,GAAK;AAAA,kBACCN,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAClBO,KADkB;AAAA,MACXC,QADW;;AAAA,8BAEWP,oBAAoB,CAAC;AACrDQ,IAAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI;AAChBF,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACH;AAHoD,GAAD,CAF/B;AAAA,MAEjBC,MAFiB,yBAEjBA,MAFiB;AAAA,MAETC,SAFS,yBAETA,SAFS;AAAA,MAEEC,IAFF,yBAEEA,IAFF;;AAQzB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF;AACI,IAAA,KAAK,EAAEN,KADX;AAEI,IAAA,QAAQ,EAAE,kBAAAO,KAAK;AAAA,aAAIN,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAZ;AAAA,KAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,EAKI,oBAAC,MAAD;AACI,IAAA,GAAG,EAAC,GADR;AACY,IAAA,QAAQ,MADpB;AACqB,IAAA,SAAS,EAAC,mBAD/B;AAEI,IAAA,WAAW,EAAEI,MAFjB;AAEyB,IAAA,SAAS,EAAEE,IAFpC;AAGI,IAAA,OAAO,EAAE,KAAI,CAACG,KAAL,CAAWC,KAAX,CAAiBV,KAAjB,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CALJ,EAYKK,SAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAZlB,CADJ;AAgBH,CAxBM","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSpeechRecognition } from \"react-speech-kit\";\r\nimport {MDBIcon, MDBBtn, MDBInput, MDBRow} from 'mdbreact'\r\n\r\n\r\nexport const SpeakRecog=()=> {\r\n    const [value, setValue] = useState(\"\");\r\n    const { listen, listening, stop } = useSpeechRecognition({\r\n        onResult: result => {\r\n            setValue(result);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n      <textarea\r\n          value={value}\r\n          onChange={event => setValue(event.target.value)}\r\n      />\r\n            <MDBBtn\r\n                tag=\"a\" floating className=\" orange lighten-2\"\r\n                onMouseDown={listen} onMouseUp={stop}\r\n                onClick={this.props.recog(value)}\r\n            >\r\n                <MDBIcon icon=\"microphone\" />\r\n            </MDBBtn>\r\n            {listening && <div>Go ahead I'm listening</div>}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}