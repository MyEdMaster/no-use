{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\src\\\\page\\\\SpeechRecog-demo\\\\index.js\";\nimport React, { Component } from \"react\"; //------------------------SPEECH RECOGNITION-----------------------------\n\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nvar recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US'; //------------------------COMPONENT-----------------------------\n\nexport var Speech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Speech, _Component);\n\n  function Speech() {\n    var _this;\n\n    _classCallCheck(this, Speech);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Speech).call(this));\n    _this.state = {\n      listening: false\n    };\n    _this.toggleListen = _this.toggleListen.bind(_assertThisInitialized(_this));\n    _this.handleListen = _this.handleListen.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Speech, [{\n    key: \"toggleListen\",\n    value: function toggleListen() {\n      this.setState({\n        listening: !this.state.listening\n      }, this.handleListen);\n    }\n  }, {\n    key: \"handleListen\",\n    value: function handleListen() {\n      console.log('listening?', this.state.listening);\n\n      if (this.state.listening) {\n        recognition.start();\n\n        recognition.onend = function () {\n          console.log(\"...continue listening...\");\n          recognition.start();\n        };\n      } else {\n        recognition.stop();\n\n        recognition.onend = function () {\n          console.log(\"Stopped listening per click\");\n        };\n      }\n\n      recognition.onstart = function () {\n        console.log(\"Listening!\");\n      };\n\n      var finalTranscript = '';\n\n      recognition.onresult = function (event) {\n        var interimTranscript = '';\n\n        for (var i = event.resultIndex; i < event.results.length; i++) {\n          var transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) finalTranscript += transcript + ' ';else interimTranscript += transcript;\n        }\n\n        document.getElementById('interim').value = interimTranscript;\n        document.getElementById('final').value = finalTranscript; //-------------------------COMMANDS------------------------------------\n\n        var transcriptArr = finalTranscript.split(' ');\n        var stopCmd = transcriptArr.slice(-3, -1);\n        console.log('stopCmd', stopCmd);\n\n        if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening') {\n          recognition.stop();\n\n          recognition.onend = function () {\n            console.log('Stopped listening per command');\n            var finalText = transcriptArr.slice(0, -3).join(' ');\n            document.getElementById('final').innerHTML = finalText;\n          };\n        }\n      }; //-----------------------------------------------------------------------\n\n\n      recognition.onerror = function (event) {\n        console.log(\"Error occurred in recognition: \" + event.error);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"microphone-btn\",\n        style: button,\n        onClick: this.toggleListen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"interim\",\n        style: interim,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"final\",\n        style: final,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Speech;\n}(Component); //-------------------------CSS------------------------------------\n\nvar styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  button: {\n    width: '60px',\n    height: '60px',\n    background: 'lightblue',\n    borderRadius: '50%',\n    margin: '6em 0 2em 0'\n  },\n  interim: {\n    color: 'gray',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  },\n  final: {\n    color: 'black',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  }\n};\nvar container = styles.container,\n    button = styles.button,\n    interim = styles.interim,\n    final = styles.final;","map":{"version":3,"sources":["C:\\Users\\yuwei\\Desktop\\Front_End\\src\\page\\SpeechRecog-demo\\index.js"],"names":["React","Component","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","Speech","state","listening","toggleListen","bind","handleListen","setState","console","log","start","onend","stop","onstart","finalTranscript","onresult","event","interimTranscript","i","resultIndex","results","length","transcript","isFinal","document","getElementById","value","transcriptArr","split","stopCmd","slice","finalText","join","innerHTML","onerror","error","container","button","interim","final","styles","display","flexDirection","alignItems","textAlign","width","height","background","borderRadius","margin","color","border","padding"],"mappings":"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","sourcesContent":["\n'use strict'\nimport React, { Component } from \"react\"\n\n\n//------------------------SPEECH RECOGNITION-----------------------------\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nconst recognition = new SpeechRecognition()\n\nrecognition.continous = true\nrecognition.interimResults = true\nrecognition.lang = 'en-US'\n\n\n//------------------------COMPONENT-----------------------------\n\nexport class Speech extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            listening: false\n        }\n        this.toggleListen = this.toggleListen.bind(this)\n        this.handleListen = this.handleListen.bind(this)\n    }\n\n    toggleListen() {\n        this.setState({\n            listening: !this.state.listening\n        }, this.handleListen)\n    }\n\n    handleListen() {\n\n        console.log('listening?', this.state.listening)\n\n        if (this.state.listening) {\n            recognition.start()\n            recognition.onend = () => {\n                console.log(\"...continue listening...\")\n                recognition.start()\n            }\n\n        } else {\n            recognition.stop()\n            recognition.onend = () => {\n                console.log(\"Stopped listening per click\")\n            }\n        }\n\n        recognition.onstart = () => {\n            console.log(\"Listening!\")\n        }\n\n        let finalTranscript = ''\n        recognition.onresult = event => {\n            let interimTranscript = ''\n\n            for (let i = event.resultIndex; i < event.results.length; i++) {\n                const transcript = event.results[i][0].transcript;\n                if (event.results[i].isFinal) finalTranscript += transcript + ' ';\n                else interimTranscript += transcript;\n            }\n            document.getElementById('interim').value = interimTranscript\n            document.getElementById('final').value = finalTranscript\n\n            //-------------------------COMMANDS------------------------------------\n\n            const transcriptArr = finalTranscript.split(' ')\n            const stopCmd = transcriptArr.slice(-3, -1)\n            console.log('stopCmd', stopCmd)\n\n            if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening'){\n                recognition.stop()\n                recognition.onend = () => {\n                    console.log('Stopped listening per command')\n                    const finalText = transcriptArr.slice(0, -3).join(' ')\n                    document.getElementById('final').innerHTML = finalText\n                }\n            }\n        }\n\n        //-----------------------------------------------------------------------\n\n        recognition.onerror = event => {\n            console.log(\"Error occurred in recognition: \" + event.error)\n        }\n\n    }\n\n    render() {\n        return (\n            <div style={container}>\n                <button id='microphone-btn' style={button} onClick={this.toggleListen} />\n                <input id='interim' style={interim}></input>\n                <input id='final' style={final}></input>\n            </div>\n        )\n    }\n}\n\n\n\n//-------------------------CSS------------------------------------\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    button: {\n        width: '60px',\n        height: '60px',\n        background: 'lightblue',\n        borderRadius: '50%',\n        margin: '6em 0 2em 0'\n    },\n    interim: {\n        color: 'gray',\n        border: '#ccc 1px solid',\n        padding: '1em',\n        margin: '1em',\n        width: '300px'\n    },\n    final: {\n        color: 'black',\n        border: '#ccc 1px solid',\n        padding: '1em',\n        margin: '1em',\n        width: '300px'\n    }\n}\n\nconst { container, button, interim, final } = styles\n"]},"metadata":{},"sourceType":"module"}