{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\src\\\\page\\\\ComplexNumber\\\\Page\\\\page2.js\";\nimport React from 'react';\nimport { Video } from \"../video-component/video\";\nimport { MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css';\nexport var ComplexPage2 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComplexPage2, _React$Component);\n\n  function ComplexPage2(props) {\n    var _this;\n\n    _classCallCheck(this, ComplexPage2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComplexPage2).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ComplexPage2, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex align-items-baseline justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"COMPLEX NUMBERS: \\xA0\"), React.createElement(\"div\", {\n        className: classes.title2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Addition\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"6\",\n        className: classes.font3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Video, {\n        url: 'https://alistempirefoundation.org/assets/addcomplex.mp4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Adding \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"complex numbers\"), \" is actually rather straightforward and simple.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), \"A complex number is a combination of a \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"real number\"), \" and an\", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"imaginary number\"), \". We generally write \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"complex numbers\"), \"in \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"a + bi\"), \"\\xA0form, where \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"a\"), \"\\xA0 is the\", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"real number\"), \" and \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"bi\"), \"\\xA0is the \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"imaginary number\"), \". For example, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"3 + 7i\"), \"\\xA0or \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"5 - 2i\"), \"\\xA0.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), \"Typically, whether adding, subtracting, multiplying or dividing complex numbers, we enclose each complex number inside parentheses like this:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(MDBRow, {\n        className: classes.border,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"(6 - 5i) + (2 + 3i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"(4 + 8i) - (3 - 2i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"(7 - 4i)(5 + 9i)\"), React.createElement(BlockMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"(8 - 6i)/(1- 3i)\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"When adding or subtracting complex numbers, you can only combine like terms, meaning you can only combine the real part of each number together and the imaginary part of each number together.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), \"So, using the problem \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"(6 - 5i) + (2 + 3i)\"), \"\\xA0 , you would first combine the real parts, the\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"6\"), \"\\xA0and the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"2\"), \"\\xA0, to get\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"8\"), \"\\xA0 ; and then you would combine the imaginary parts, the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"-5i\"), \"\\xA0and the \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"3i\"), \"\\xA0, to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"- 2i\"), \"\\xA0. This leaves you with the complex number \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"8 - 2i\"), \"\\xA0.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), \"On a side note, since we are dealing with addition, you could also simply rewrite the problem without the parentheses, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"(6 - 5i) + (2 + 3i)\"), \"\\xA0, and then combine like terms. That\\u2019s completely legal in the case of an addition problem, but keep in mind it doesn\\u2019t work exactly like that for subtraction. We\\u2019ll talk about that when we discuss subtracting complex numbers.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), \"Let\\u2019s try another.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), \"Given \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"(-3 + 2i) + (7 - i)\"), \"\\xA0. Combine the real parts, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"-3 + 7\"), \"\\xA0, to get\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"4\"), \"\\xA0 . Then combine the imaginary parts,\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"2i - i\"), \"\\xA0, to get \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"i\"), \"\\xA0. You are left with the complex number \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"4 + i\"), \"\\xA0.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), \"Nothing to it, is there? Here are some more for you to try.\"))), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple lighten-1\",\n        className: \"\".concat(classes.btn, \" w-100 mt-3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Previous Lesson\")), React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple lighten-1\",\n        className: \"\".concat(classes.btn, \" w-100 mt-3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Next Lesson\"))));\n    }\n  }]);\n\n  return ComplexPage2;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\yuwei\\Desktop\\Front_End\\src\\page\\ComplexNumber\\Page\\page2.js"],"names":["React","Video","MDBRow","MDBCol","MDBBtn","InlineMath","BlockMath","classes","ComplexPage2","props","state","title1","title2","font3","ph","high","border","ph2","btn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Video} from \"../video-component/video\";\nimport {MDBRow, MDBCol,MDBBtn} from 'mdbreact'\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css'\n\n\nexport class ComplexPage2 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                    <div className={classes.title1}>\n                        COMPLEX NUMBERS: &nbsp;\n                    </div>\n                    <div className={classes.title2}>\n                       Addition\n                    </div>\n                </div>\n\n                <MDBRow>\n                    <MDBCol size=\"3\">\n\n                    </MDBCol>\n                    <MDBCol size=\"6\" className={classes.font3}>\n                        <Video url={'https://alistempirefoundation.org/assets/addcomplex.mp4'}/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol size=\"3\">\n\n                    </MDBCol>\n                    <MDBCol size=\"6\">\n                        <p className={classes.ph}>\n                            Adding <span className={classes.high}>complex numbers</span> is actually rather straightforward and simple.\n                            <br/>\n                            A complex number is a combination of a <span className={classes.high}>real number</span> and an\n                            <span className={classes.high}>imaginary number</span>. We generally write <span className={classes.high}>complex numbers</span>\n                            in &nbsp;<InlineMath>a + bi</InlineMath>&nbsp;form, where &nbsp;<InlineMath>a</InlineMath>&nbsp; is the\n                            <span className={classes.high}>real number</span> and\n                            &nbsp;<InlineMath>bi</InlineMath>&nbsp;is the <span className={classes.high}>imaginary number</span>. For example,\n                            &nbsp;<InlineMath>3 + 7i</InlineMath>&nbsp;or\n                            &nbsp;<InlineMath>5 - 2i</InlineMath>&nbsp;.\n                            <tr/>\n                            <br/>\n                            Typically, whether adding, subtracting, multiplying or dividing complex numbers, we enclose each complex number inside parentheses like this:\n\n                        </p>\n                        <br/>\n\n                        <MDBRow className={classes.border} center>\n                            <p className={classes.ph2}>\n                                <BlockMath>(6 - 5i) + (2 + 3i)</BlockMath>\n                                <BlockMath>(4 + 8i) - (3 - 2i)</BlockMath>\n                                <BlockMath>(7 - 4i)(5 + 9i)</BlockMath>\n                                <BlockMath>(8 - 6i)/(1- 3i)</BlockMath>\n                            </p>\n                        </MDBRow>\n                        <br/>\n                        <p className={classes.ph}>\n                            When adding or subtracting complex numbers, you can only combine like terms, meaning you can only combine the real part of each number together and the imaginary part of each number together.\n                            <tr/><br/>\n                            So, using the problem &nbsp;<InlineMath>(6 - 5i) + (2 + 3i)</InlineMath>&nbsp;\n                            , you would first combine the real parts, the&nbsp;<InlineMath>6</InlineMath>&nbsp;and the\n                            &nbsp;<InlineMath>2</InlineMath>&nbsp;, to get&nbsp;<InlineMath>8</InlineMath>&nbsp;\n                            ; and then you would combine the imaginary parts, the\n                            &nbsp;<InlineMath>-5i</InlineMath>&nbsp;and the &nbsp;<InlineMath>3i</InlineMath>&nbsp;, to get\n                            &nbsp;<InlineMath>- 2i</InlineMath>&nbsp;. This leaves you with the complex number\n                            &nbsp;<InlineMath>8 - 2i</InlineMath>&nbsp;.\n                            <tr/><br/>\n\n                            On a side note, since we are dealing with addition, you could also simply rewrite the problem without the parentheses,\n                            &nbsp;<InlineMath>(6 - 5i) + (2 + 3i)</InlineMath>&nbsp;, and then combine like terms. That’s completely legal in the case of an addition problem, but keep in mind it doesn’t work exactly like that for subtraction. We’ll talk about that when we discuss subtracting complex numbers.\n                            <tr/><br/>\n                            Let’s try another.\n                            <tr/><br/>\n                            Given\n                            &nbsp;<InlineMath>(-3 + 2i) + (7 - i)</InlineMath>&nbsp;. Combine the real parts,\n                            &nbsp;<InlineMath>-3 + 7</InlineMath>&nbsp;, to get&nbsp;<InlineMath>4</InlineMath>&nbsp;\n                            . Then combine the imaginary parts,&nbsp;<InlineMath>2i - i</InlineMath>&nbsp;, to get\n                            &nbsp;<InlineMath>i</InlineMath>&nbsp;. You are left with the complex number\n                            &nbsp;<InlineMath>4 + i</InlineMath>&nbsp;.\n                            <tr/><br/>\n                            Nothing to it, is there? Here are some more for you to try.\n                        </p>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow center>\n                    <MDBCol size=\"2\">\n                        <MDBBtn color=\"deep-purple lighten-1\" className={`${classes.btn} w-100 mt-3`}>Previous Lesson</MDBBtn>\n                    </MDBCol>\n                    <MDBCol size=\"2\">\n                        <MDBBtn color=\"deep-purple lighten-1\" className={`${classes.btn} w-100 mt-3`}>Next Lesson</MDBBtn>\n                    </MDBCol>\n                </MDBRow>\n            </div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}