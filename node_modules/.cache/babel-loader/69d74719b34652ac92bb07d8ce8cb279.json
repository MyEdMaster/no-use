{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\src\\\\page\\\\SpeakModule\\\\index.js\";\nimport React, { useState } from \"react\";\nimport { useSpeechRecognition } from \"react-speech-kit\";\nexport var SpeakRecog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SpeakRecog, _React$Component);\n\n  function SpeakRecog(props) {\n    var _this;\n\n    _classCallCheck(this, SpeakRecog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SpeakRecog).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(SpeakRecog, [{\n    key: \"render\",\n    value: function render() {\n      var _useState = useState(\"\"),\n          _useState2 = _slicedToArray(_useState, 2),\n          value = _useState2[0],\n          setValue = _useState2[1];\n\n      var _useSpeechRecognition = useSpeechRecognition({\n        onResult: function onResult(result) {\n          setValue(result);\n        }\n      }),\n          listen = _useSpeechRecognition.listen,\n          listening = _useSpeechRecognition.listening,\n          stop = _useSpeechRecognition.stop;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        value: value,\n        onChange: function onChange(event) {\n          return setValue(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onMouseDown: listen,\n        onMouseUp: stop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"\\uD83C\\uDFA4\"), listening && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Go ahead I'm listening\"));\n    }\n  }]);\n\n  return SpeakRecog;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\yuwei\\Desktop\\Front_End\\src\\page\\SpeakModule\\index.js"],"names":["React","useState","useSpeechRecognition","SpeakRecog","props","state","value","setValue","onResult","result","listen","listening","stop","event","target","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AAEA,WAAaC,UAAb;AAAA;AAAA;AAAA;;AACI,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFe;AAMlB;;AAPL;AAAA;AAAA,6BAQa;AAAA,sBACqBJ,QAAQ,CAAC,EAAD,CAD7B;AAAA;AAAA,UACEK,KADF;AAAA,UACSC,QADT;;AAAA,kCAE+BL,oBAAoB,CAAC;AACrDM,QAAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI;AAChBF,UAAAA,QAAQ,CAACE,MAAD,CAAR;AACH;AAHoD,OAAD,CAFnD;AAAA,UAEGC,MAFH,yBAEGA,MAFH;AAAA,UAEWC,SAFX,yBAEWA,SAFX;AAAA,UAEsBC,IAFtB,yBAEsBA,IAFtB;;AAQL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACC,QAAA,KAAK,EAAEN,KADR;AAEC,QAAA,QAAQ,EAAE,kBAAAO,KAAK;AAAA,iBAAIN,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAZ;AAAA,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI;AAAQ,QAAA,WAAW,EAAEI,MAArB;AAA6B,QAAA,SAAS,EAAEE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,EAQKD,SAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCARlB,CADJ;AAYH;AA5BL;;AAAA;AAAA,EAAgCX,KAAK,CAACe,SAAtC","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSpeechRecognition } from \"react-speech-kit\";\r\n\r\nexport class SpeakRecog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n    }\r\n    render() {\r\n        const [value, setValue] = useState(\"\");\r\n        const { listen, listening, stop } = useSpeechRecognition({\r\n            onResult: result => {\r\n                setValue(result);\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <textarea\r\n                 value={value}\r\n                 onChange={event => setValue(event.target.value)}\r\n                />\r\n                <button onMouseDown={listen} onMouseUp={stop}>\r\n                    🎤\r\n                </button>\r\n                {listening && <div>Go ahead I'm listening</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}