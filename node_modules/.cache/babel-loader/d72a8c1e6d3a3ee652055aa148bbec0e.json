{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\src\\\\page\\\\SpeakModule\\\\index.js\";\nimport React, { useState } from \"react\";\nimport { useSpeechRecognition } from \"react-speech-kit\";\nexport var SpeakRecog = function SpeakRecog() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useSpeechRecognition = useSpeechRecognition({\n    onResult: function onResult(result) {\n      setValue(result);\n    }\n  }),\n      listen = _useSpeechRecognition.listen,\n      listening = _useSpeechRecognition.listening,\n      stop = _useSpeechRecognition.stop;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    value: value,\n    onChange: function onChange(event) {\n      return setValue(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onMouseDown: listen,\n    onMouseUp: stop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"\\uD83C\\uDFA4\"), listening && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Go ahead I'm listening\"));\n};","map":{"version":3,"sources":["C:\\Users\\yuwei\\Desktop\\Front_End\\src\\page\\SpeakModule\\index.js"],"names":["React","useState","useSpeechRecognition","SpeakRecog","value","setValue","onResult","result","listen","listening","stop","event","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AAEA,OAAO,IAAMC,UAAU,GAAC,SAAXA,UAAW,GAAK;AAAA,kBACCF,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAClBG,KADkB;AAAA,MACXC,QADW;;AAAA,8BAEWH,oBAAoB,CAAC;AACrDI,IAAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI;AAChBF,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACH;AAHoD,GAAD,CAF/B;AAAA,MAEjBC,MAFiB,yBAEjBA,MAFiB;AAAA,MAETC,SAFS,yBAETA,SAFS;AAAA,MAEEC,IAFF,yBAEEA,IAFF;;AAQzB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF;AACI,IAAA,KAAK,EAAEN,KADX;AAEI,IAAA,QAAQ,EAAE,kBAAAO,KAAK;AAAA,aAAIN,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAZ;AAAA,KAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,EAKI;AAAQ,IAAA,WAAW,EAAEI,MAArB;AAA6B,IAAA,SAAS,EAAEE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EAQKD,SAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARlB,CADJ;AAYH,CApBM","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSpeechRecognition } from \"react-speech-kit\";\r\n\r\nexport const SpeakRecog=()=> {\r\n    const [value, setValue] = useState(\"\");\r\n    const { listen, listening, stop } = useSpeechRecognition({\r\n        onResult: result => {\r\n            setValue(result);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n      <textarea\r\n          value={value}\r\n          onChange={event => setValue(event.target.value)}\r\n      />\r\n            <button onMouseDown={listen} onMouseUp={stop}>\r\n                🎤\r\n            </button>\r\n            {listening && <div>Go ahead I'm listening</div>}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}