{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vivian/Desktop/Front_End/src/page/SpeechSyn-demo/index.js\";\nimport React, { Component } from \"react\"; //------------------------SPEECH RECOGNITION-----------------------------\n// const SpeechSynthesis =  window.speechSynthesis || window.webkitspeechSynthesis\n// const synth = new SpeechSynthesis()\n\nvar synth = window.speechSynthesis; //\n// recognition.continous = true\n// recognition.interimResults = true\n// recognition.lang = 'en-US'\n//-----------------------JS Global Variable----------------------------\n\nvar inputForm = document.querySelector('form');\nvar inputTxt = document.querySelector('.txt');\nvar voiceSelect = document.querySelector('select');\nvar pitch = document.querySelector('#pitch');\nvar pitchValue = document.querySelector('.pitch-value');\nvar rate = document.querySelector('#rate');\nvar rateValue = document.querySelector('.rate-value');\nvar voices = []; //------------------------COMPONENT-----------------------------\n\nexport var SpeechSyn =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SpeechSyn, _Component);\n\n  function SpeechSyn() {\n    var _this;\n\n    _classCallCheck(this, SpeechSyn);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SpeechSyn).call(this));\n\n    _this.populateVoiceList = function () {\n      var voices = synth.getVoices();\n\n      for (var i = 0; i < voices.length; i++) {\n        var option = document.createElement('option');\n        option.textContent = voices[i].name + ' (' + voices[i].lang + ')';\n\n        if (voices[i].default) {\n          option.textContent += ' -- DEFAULT';\n        }\n\n        option.setAttribute('data-lang', voices[i].lang);\n        option.setAttribute('data-name', voices[i].name);\n        document.querySelector('select').appendChild(option); // document.getElementById('test').innerHTML= option\n        // voiceSelect.appendChild(option);\n      }\n    };\n\n    _this.state = {}; // this.toggleListen = this.toggleListen.bind(this)\n\n    _this.handleListen = _this.handleListen.bind(_assertThisInitialized(_this));\n    return _this;\n  } // toggleListen() {\n  //     this.setState({\n  //         tag: !this.state.listening\n  //     }, this.handleListen)\n  // }\n\n\n  _createClass(SpeechSyn, [{\n    key: \"handleListen\",\n    value: function handleListen() {\n      var _this2 = this;\n\n      this.populateVoiceList();\n      var inputForm = document.querySelector('form');\n      var inputTxt = document.querySelector('.txt');\n      var voiceSelect = document.querySelector('select');\n      var pitch = document.querySelector('#pitch');\n\n      if (speechSynthesis.onvoiceschanged !== undefined) {\n        speechSynthesis.onvoiceschanged = function () {\n          return _this2.populateVoiceList();\n        };\n      }\n\n      inputForm.onsubmit = function (event) {\n        event.preventDefault();\n        var utterThis = new SpeechSynthesisUtterance(inputTxt.value);\n        var selectedOption = voiceSelect.select.getAttribute('data-name');\n\n        for (var i = 0; i < voices.length; i++) {\n          if (voices[i].name === selectedOption) {\n            utterThis.voice = voices[i];\n          }\n        }\n\n        utterThis.pitch = pitch.value;\n        utterThis.rate = rate.value;\n        synth.speak(utterThis);\n        inputTxt.blur();\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"microphone-btn\",\n        style: button,\n        onClick: this.handleListen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Speech synthesiser\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Enter some text in the input below and press return or the \\\"play\\\" button to hear it. change voices using the dropdown menu.\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"txt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"rate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Rate\"), React.createElement(\"input\", {\n        type: \"range\",\n        min: \"0.5\",\n        max: \"2\",\n        value: \"1\",\n        step: \"0.1\",\n        id: \"rate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"rate-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"div\", {\n        className: \"clearfix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"pitch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Pitch\"), React.createElement(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"2\",\n        value: \"1\",\n        step: \"0.1\",\n        id: \"pitch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"pitch-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"div\", {\n        className: \"clearfix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"play\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Play\"))));\n    }\n  }]);\n\n  return SpeechSyn;\n}(Component); //-------------------------CSS------------------------------------\n\nvar styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  button: {\n    width: '60px',\n    height: '60px',\n    background: 'lightblue',\n    borderRadius: '50%',\n    margin: '6em 0 2em 0'\n  },\n  interim: {\n    color: 'gray',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  },\n  final: {\n    color: 'black',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  }\n};\nvar container = styles.container,\n    button = styles.button,\n    interim = styles.interim,\n    final = styles.final;","map":{"version":3,"sources":["/Users/vivian/Desktop/Front_End/src/page/SpeechSyn-demo/index.js"],"names":["React","Component","synth","window","speechSynthesis","inputForm","document","querySelector","inputTxt","voiceSelect","pitch","pitchValue","rate","rateValue","voices","SpeechSyn","populateVoiceList","getVoices","i","length","option","createElement","textContent","name","lang","default","setAttribute","appendChild","state","handleListen","bind","onvoiceschanged","undefined","onsubmit","event","preventDefault","utterThis","SpeechSynthesisUtterance","value","selectedOption","select","getAttribute","voice","speak","blur","container","button","styles","display","flexDirection","alignItems","textAlign","width","height","background","borderRadius","margin","interim","color","border","padding","final"],"mappings":"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","sourcesContent":["\n'use strict'\nimport React, { Component } from \"react\"\n\n\n//------------------------SPEECH RECOGNITION-----------------------------\n\n// const SpeechSynthesis =  window.speechSynthesis || window.webkitspeechSynthesis\n// const synth = new SpeechSynthesis()\nconst synth = window.speechSynthesis\n//\n// recognition.continous = true\n// recognition.interimResults = true\n// recognition.lang = 'en-US'\n//-----------------------JS Global Variable----------------------------\nconst inputForm = document.querySelector('form');\nconst inputTxt = document.querySelector('.txt');\nconst voiceSelect = document.querySelector('select');\nconst pitch = document.querySelector('#pitch');\nconst pitchValue = document.querySelector('.pitch-value');\nconst rate = document.querySelector('#rate');\nconst rateValue = document.querySelector('.rate-value');\n\nconst voices = [];\n\n//------------------------COMPONENT-----------------------------\n\nexport class SpeechSyn extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n\n\n        }\n        // this.toggleListen = this.toggleListen.bind(this)\n        this.handleListen = this.handleListen.bind(this)\n    }\n\n    // toggleListen() {\n    //     this.setState({\n    //         tag: !this.state.listening\n    //     }, this.handleListen)\n    // }\n\n    populateVoiceList=()=>{\n        let voices = synth.getVoices();\n        for(let i = 0; i < voices.length ; i++) {\n            let option = document.createElement('option');\n            option.textContent = voices[i].name + ' (' + voices[i].lang + ')';\n            if(voices[i].default) {\n                option.textContent += ' -- DEFAULT';\n            }\n\n            option.setAttribute('data-lang', voices[i].lang);\n            option.setAttribute('data-name', voices[i].name);\n            document.querySelector('select').appendChild(option)\n            // document.getElementById('test').innerHTML= option\n            // voiceSelect.appendChild(option);\n        }\n    }\n    handleListen(){\n        this.populateVoiceList()\n        let inputForm = document.querySelector('form');\n        let inputTxt = document.querySelector('.txt');\n        let voiceSelect = document.querySelector('select');\n        let pitch = document.querySelector('#pitch');\n\n        if (speechSynthesis.onvoiceschanged !== undefined) {\n            speechSynthesis.onvoiceschanged =()=>this.populateVoiceList();\n        }\n\n        inputForm.onsubmit = (event)=>{\n            event.preventDefault();\n\n            let utterThis = new SpeechSynthesisUtterance(inputTxt.value);\n            let selectedOption = voiceSelect.select.getAttribute('data-name');\n            for(let i = 0; i < voices.length ; i++) {\n                if(voices[i].name === selectedOption) {\n                    utterThis.voice = voices[i];\n                }\n            }\n            utterThis.pitch = pitch.value;\n            utterThis.rate = rate.value;\n            synth.speak(utterThis);\n\n            inputTxt.blur();\n        }\n    }\n    render() {\n        return (\n            <div style={container}>\n                <button id='microphone-btn' style={button} onClick={this.handleListen} />\n                <h1>Speech synthesiser</h1>\n\n                <p>Enter some text in the input below and press return or the \"play\" button to hear it. change voices\n                    using the dropdown menu.</p>\n\n                <form>\n                    <input type=\"text\" className=\"txt\"/>\n                        <div>\n                            <label htmlFor=\"rate\">Rate</label>\n                            <input type=\"range\" min=\"0.5\" max=\"2\" value=\"1\" step=\"0.1\"\n                                                                     id=\"rate\"/>\n                            <div className=\"rate-value\">1</div>\n                            <div className=\"clearfix\"></div>\n                        </div>\n                        <div>\n                            <label htmlFor=\"pitch\">Pitch</label>\n                            <input type=\"range\" min=\"0\" max=\"2\" value=\"1\" step=\"0.1\"\n                                                                       id=\"pitch\"/>\n                            <div className=\"pitch-value\">1</div>\n                            <div className=\"clearfix\"></div>\n                        </div>\n                        <select>\n\n                        </select>\n                        <div className=\"controls\">\n                            <button id=\"play\" type=\"submit\">Play</button>\n                        </div>\n                </form>\n                {/*<input id='interim' style={interim}></input>*/}\n                {/*<input id='final' style={final}></input>*/}\n            </div>\n        )\n    }\n}\n\n\n\n//-------------------------CSS------------------------------------\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        textAlign: 'center'\n    },\n    button: {\n        width: '60px',\n        height: '60px',\n        background: 'lightblue',\n        borderRadius: '50%',\n        margin: '6em 0 2em 0'\n    },\n    interim: {\n        color: 'gray',\n        border: '#ccc 1px solid',\n        padding: '1em',\n        margin: '1em',\n        width: '300px'\n    },\n    final: {\n        color: 'black',\n        border: '#ccc 1px solid',\n        padding: '1em',\n        margin: '1em',\n        width: '300px'\n    }\n}\n\nconst { container, button, interim, final } = styles\n"]},"metadata":{},"sourceType":"module"}