{"ast":null,"code":"var _jsxFileName = \"/Users/vivian/Desktop/Front_End/src/page/Test/test.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SpeechRecognition from \"react-speech-recognition\";\nvar propTypes = {\n  // Props injected by SpeechRecognition\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n};\nvar options = {\n  autoStart: false\n};\n\nvar Dictaphone = function Dictaphone(_ref) {\n  var transcript = _ref.transcript,\n      resetTranscript = _ref.resetTranscript,\n      browserSupportsSpeechRecognition = _ref.browserSupportsSpeechRecognition;\n\n  if (!browserSupportsSpeechRecognition) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: resetTranscript,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    onMouseDown: listen,\n    onMouseUp: stop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"\\uD83C\\uDFA4\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, transcript));\n};\n\nDictaphone.propTypes = propTypes;\nexport default SpeechRecognition(options)(Dictaphone);","map":{"version":3,"sources":["/Users/vivian/Desktop/Front_End/src/page/Test/test.js"],"names":["React","Component","PropTypes","SpeechRecognition","propTypes","transcript","string","resetTranscript","func","browserSupportsSpeechRecognition","bool","options","autoStart","Dictaphone","listen","stop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AAIA,IAAMC,SAAS,GAAG;AACd;AACAC,EAAAA,UAAU,EAAEH,SAAS,CAACI,MAFR;AAGdC,EAAAA,eAAe,EAAEL,SAAS,CAACM,IAHb;AAIdC,EAAAA,gCAAgC,EAAEP,SAAS,CAACQ;AAJ9B,CAAlB;AAMA,IAAMC,OAAO,GAAG;AACZC,EAAAA,SAAS,EAAE;AADC,CAAhB;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAKO;AAAA,MAJFR,UAIE,QAJFA,UAIE;AAAA,MAHFE,eAGE,QAHFA,eAGE;AAAA,MAFFE,gCAEE,QAFFA,gCAEE;;AACtB,MAAI,CAACA,gCAAL,EAAuC;AACnC,WAAO,IAAP;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEF,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAQ,IAAA,WAAW,EAAEO,MAArB;AAA6B,IAAA,SAAS,EAAEC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,UAAP,CALJ,CADJ;AASH,CAnBD;;AAqBAQ,UAAU,CAACT,SAAX,GAAuBA,SAAvB;AAEA,eAAeD,iBAAiB,CAACQ,OAAD,CAAjB,CAA2BE,UAA3B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SpeechRecognition from \"react-speech-recognition\";\n\n\n\nconst propTypes = {\n    // Props injected by SpeechRecognition\n    transcript: PropTypes.string,\n    resetTranscript: PropTypes.func,\n    browserSupportsSpeechRecognition: PropTypes.bool\n};\nconst options = {\n    autoStart: false\n}\n\n\nconst Dictaphone = ({\n                        transcript,\n                        resetTranscript,\n                        browserSupportsSpeechRecognition,\n    \n                    }) => {\n    if (!browserSupportsSpeechRecognition) {\n        return null;\n    }\n\n    return (\n        <div>\n            <button onClick={resetTranscript}>Reset</button>\n            <button onMouseDown={listen} onMouseUp={stop}>\n                ðŸŽ¤\n            </button>\n            <span>{transcript}</span>\n        </div>\n    );\n};\n\nDictaphone.propTypes = propTypes;\n\nexport default SpeechRecognition(options)(Dictaphone)"]},"metadata":{},"sourceType":"module"}