{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vivian/Desktop/Front_End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from \"react\"; //------------------------SPEECH RECOGNITION-----------------------------\n// const SpeechSynthesis =  window.speechSynthesis || window.webkitspeechSynthesis\n// const synth = new SpeechSynthesis()\n\nvar synth = window.speechSynthesis; //\n// recognition.continous = true\n// recognition.interimResults = true\n// recognition.lang = 'en-US'\n//-----------------------JS Global Variable----------------------------\n\nvar voices = []; //------------------------COMPONENT-----------------------------\n\nexport var SpeechSyn =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SpeechSyn, _Component);\n\n  function SpeechSyn() {\n    var _this;\n\n    _classCallCheck(this, SpeechSyn);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SpeechSyn).call(this));\n\n    _this.populateVoiceList = function () {\n      var voices = synth.getVoices();\n\n      for (var i = 0; i < voices.length; i++) {\n        var option = document.createElement('option');\n        option.textContent = voices[i].name + ' (' + voices[i].lang + ')';\n\n        if (voices[i].default) {\n          option.textContent += ' -- DEFAULT';\n        }\n\n        option.setAttribute('data-lang', voices[i].lang);\n        option.setAttribute('data-name', voices[i].name);\n      }\n    };\n\n    _this.state = {}; // this.toggleListen = this.toggleListen.bind(this)\n\n    _this.handleListen = _this.handleListen.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SpeechSyn, [{\n    key: \"handleListen\",\n    value: function handleListen() {\n      var _this2 = this;\n\n      this.populateVoiceList();\n      var inputForm = document.querySelector('form');\n      var inputTxt = document.querySelector('.txt');\n\n      if (speechSynthesis.onvoiceschanged !== undefined) {\n        speechSynthesis.onvoiceschanged = function () {\n          return _this2.populateVoiceList();\n        };\n      }\n\n      var utterThis = new SpeechSynthesisUtterance(this.props.text); // let selectedOption = voiceSelect.selectedOptions[0].getAttribute('data-name');\n\n      for (var i = 0; i < voices.length; i++) {\n        utterThis.voice = voices[i]; // if(voices[i].name === selectedOption) {\n        //\n        // }\n      }\n\n      utterThis.pitch = 1;\n      utterThis.rate = 1;\n      synth.speak(utterThis);\n      inputTxt.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.handleListen();\n    }\n  }]);\n\n  return SpeechSyn;\n}(Component);","map":{"version":3,"sources":["/Users/vivian/Desktop/Front_End/src/page/RRH/Component/speech-syn/index.js"],"names":["React","Component","synth","window","speechSynthesis","voices","SpeechSyn","populateVoiceList","getVoices","i","length","option","document","createElement","textContent","name","lang","default","setAttribute","state","handleListen","bind","inputForm","querySelector","inputTxt","onvoiceschanged","undefined","utterThis","SpeechSynthesisUtterance","props","text","voice","pitch","rate","speak","blur"],"mappings":"AACA;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAGA;AAEA;AACA;;AACA,IAAMC,KAAK,GAAGC,MAAM,CAACC,eAArB,C,CACA;AACA;AACA;AACA;AACA;;AAGA,IAAMC,MAAM,GAAG,EAAf,C,CAEA;;AAEA,WAAaC,SAAb;AAAA;AAAA;AAAA;;AAEI,uBAAc;AAAA;;AAAA;;AACV;;AADU,UAYdC,iBAZc,GAYI,YAAI;AAClB,UAAIF,MAAM,GAAGH,KAAK,CAACM,SAAN,EAAb;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,MAAM,CAACK,MAA1B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,YAAIE,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,QAAAA,MAAM,CAACG,WAAP,GAAqBT,MAAM,CAACI,CAAD,CAAN,CAAUM,IAAV,GAAiB,IAAjB,GAAwBV,MAAM,CAACI,CAAD,CAAN,CAAUO,IAAlC,GAAyC,GAA9D;;AACA,YAAGX,MAAM,CAACI,CAAD,CAAN,CAAUQ,OAAb,EAAsB;AAClBN,UAAAA,MAAM,CAACG,WAAP,IAAsB,aAAtB;AACH;;AAEDH,QAAAA,MAAM,CAACO,YAAP,CAAoB,WAApB,EAAiCb,MAAM,CAACI,CAAD,CAAN,CAAUO,IAA3C;AACAL,QAAAA,MAAM,CAACO,YAAP,CAAoB,WAApB,EAAiCb,MAAM,CAACI,CAAD,CAAN,CAAUM,IAA3C;AAEH;AACJ,KAzBa;;AAEV,UAAKI,KAAL,GAAa,EAAb,CAFU,CAMV;;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AAPU;AAQb;;AAVL;AAAA;AAAA,mCA4BkB;AAAA;;AACV,WAAKd,iBAAL;AACA,UAAIe,SAAS,GAAGV,QAAQ,CAACW,aAAT,CAAuB,MAAvB,CAAhB;AACA,UAAIC,QAAQ,GAAGZ,QAAQ,CAACW,aAAT,CAAuB,MAAvB,CAAf;;AAEA,UAAInB,eAAe,CAACqB,eAAhB,KAAoCC,SAAxC,EAAmD;AAC/CtB,QAAAA,eAAe,CAACqB,eAAhB,GAAiC;AAAA,iBAAI,MAAI,CAAClB,iBAAL,EAAJ;AAAA,SAAjC;AACH;;AAID,UAAIoB,SAAS,GAAG,IAAIC,wBAAJ,CAA6B,KAAKC,KAAL,CAAWC,IAAxC,CAAhB,CAXU,CAYV;;AACA,WAAI,IAAIrB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,MAAM,CAACK,MAA1B,EAAmCD,CAAC,EAApC,EAAwC;AACpCkB,QAAAA,SAAS,CAACI,KAAV,GAAkB1B,MAAM,CAACI,CAAD,CAAxB,CADoC,CAEpC;AACA;AACA;AACH;;AACDkB,MAAAA,SAAS,CAACK,KAAV,GAAkB,CAAlB;AACAL,MAAAA,SAAS,CAACM,IAAV,GAAiB,CAAjB;AACA/B,MAAAA,KAAK,CAACgC,KAAN,CAAYP,SAAZ;AACAH,MAAAA,QAAQ,CAACW,IAAT;AAEH;AApDL;AAAA;AAAA,6BAqDa;AACL,aACI,KAAKf,YAAL,EADJ;AAGH;AAzDL;;AAAA;AAAA,EAA+BnB,SAA/B","sourcesContent":["\n'use strict'\nimport React, { Component } from \"react\"\n\n\n//------------------------SPEECH RECOGNITION-----------------------------\n\n// const SpeechSynthesis =  window.speechSynthesis || window.webkitspeechSynthesis\n// const synth = new SpeechSynthesis()\nconst synth = window.speechSynthesis\n//\n// recognition.continous = true\n// recognition.interimResults = true\n// recognition.lang = 'en-US'\n//-----------------------JS Global Variable----------------------------\n\n\nconst voices = [];\n\n//------------------------COMPONENT-----------------------------\n\nexport class SpeechSyn extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n\n\n        }\n        // this.toggleListen = this.toggleListen.bind(this)\n        this.handleListen = this.handleListen.bind(this)\n    }\n\n\n\n    populateVoiceList=()=>{\n        let voices = synth.getVoices();\n        for(let i = 0; i < voices.length ; i++) {\n            let option = document.createElement('option');\n            option.textContent = voices[i].name + ' (' + voices[i].lang + ')';\n            if(voices[i].default) {\n                option.textContent += ' -- DEFAULT';\n            }\n\n            option.setAttribute('data-lang', voices[i].lang);\n            option.setAttribute('data-name', voices[i].name);\n\n        }\n    }\n    handleListen(){\n        this.populateVoiceList()\n        let inputForm = document.querySelector('form');\n        let inputTxt = document.querySelector('.txt');\n\n        if (speechSynthesis.onvoiceschanged !== undefined) {\n            speechSynthesis.onvoiceschanged =()=>this.populateVoiceList();\n        }\n\n        \n\n        let utterThis = new SpeechSynthesisUtterance(this.props.text);\n        // let selectedOption = voiceSelect.selectedOptions[0].getAttribute('data-name');\n        for(let i = 0; i < voices.length ; i++) {\n            utterThis.voice = voices[i];\n            // if(voices[i].name === selectedOption) {\n            //\n            // }\n        }\n        utterThis.pitch = 1;\n        utterThis.rate = 1;\n        synth.speak(utterThis);\n        inputTxt.blur();\n\n    }\n    render() {\n        return (\n            this.handleListen()\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}