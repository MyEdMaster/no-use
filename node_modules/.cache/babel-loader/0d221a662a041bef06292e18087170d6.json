{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\src\\\\page\\\\ComplexNumber\\\\Page\\\\SpeakModuleWorksheet\\\\index.js\";\n\nimport React, { useState } from \"react\";\nimport { useSpeechRecognition } from \"react-speech-kit\";\nimport { MDBIcon, MDBBtn, MDBInput, MDBRow } from 'mdbreact';\nexport var SpeakRecogWorksheet = function SpeakRecogWorksheet() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useSpeechRecognition = useSpeechRecognition({\n    onResult: function onResult(result) {\n      setValue(result);\n    }\n  }),\n      listen = _useSpeechRecognition.listen,\n      listening = _useSpeechRecognition.listening,\n      stop = _useSpeechRecognition.stop;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"px-3 d-flex align-items-baseline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-grow-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(MDBInput, {\n    label: _this.props.label,\n    className: \"mr-3\",\n    size: \"sm\",\n    value: _this.props.value,\n    style: _this.props.isRight ? {\n      border: 'solid',\n      borderColor: '#81c784',\n      borderWidth: '0 0 2px 0',\n      fontFamily: '\\'Roboto\\',sans-serif',\n      fontSize: '18px'\n    } : {\n      border: 'solid',\n      borderColor: '#d32f2f',\n      borderWidth: '0 0 2px 0',\n      fontFamily: '\\'Roboto\\',sans-serif',\n      fontSize: '18px'\n    },\n    onChange: _this.props.Change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))), React.createElement(MDBRow, {\n    center: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(MDBBtn, {\n    tag: \"a\",\n    floating: true,\n    className: \" green lighten-2\",\n    onClick: _this.props.post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(MDBIcon, {\n    icon: \"clipboard-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(MDBBtn, {\n    tag: \"a\",\n    floating: true,\n    className: \" orange lighten-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(MDBIcon, {\n    icon: \"microphone\",\n    onMouseDown: listen,\n    onMouseUp: stop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })))), listening && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Go ahead I'm listening\"));\n};","map":{"version":3,"sources":["C:\\Users\\yuwei\\Desktop\\Front_End\\src\\page\\ComplexNumber\\Page\\SpeakModuleWorksheet\\index.js"],"names":["React","useState","useSpeechRecognition","MDBIcon","MDBBtn","MDBInput","MDBRow","SpeakRecogWorksheet","value","setValue","onResult","result","listen","listening","stop","props","label","isRight","border","borderColor","borderWidth","fontFamily","fontSize","Change","post"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAAQC,OAAR,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,MAAnC,QAAgD,UAAhD;AAGA,OAAO,IAAMC,mBAAmB,GAAC,SAApBA,mBAAoB,GAAK;AAAA,kBACRN,QAAQ,CAAC,EAAD,CADA;AAAA;AAAA,MAC3BO,KAD2B;AAAA,MACpBC,QADoB;;AAAA,8BAEEP,oBAAoB,CAAC;AACrDQ,IAAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI;AAChBF,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACH;AAHoD,GAAD,CAFtB;AAAA,MAE1BC,MAF0B,yBAE1BA,MAF0B;AAAA,MAElBC,SAFkB,yBAElBA,SAFkB;AAAA,MAEPC,IAFO,yBAEPA,IAFO;;AAQlC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE,KAAI,CAACC,KAAL,CAAWC,KADtB;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,IAAI,EAAC,IAHT;AAII,IAAA,KAAK,EAAE,KAAI,CAACD,KAAL,CAAWP,KAJtB;AAKI,IAAA,KAAK,EAAE,KAAI,CAACO,KAAL,CAAWE,OAAX,GAAmB;AACtBC,MAAAA,MAAM,EAAC,OADe;AAEtBC,MAAAA,WAAW,EAAC,SAFU;AAGtBC,MAAAA,WAAW,EAAC,WAHU;AAItBC,MAAAA,UAAU,EAAC,uBAJW;AAKtBC,MAAAA,QAAQ,EAAC;AALa,KAAnB,GAML;AACEJ,MAAAA,MAAM,EAAC,OADT;AAEEC,MAAAA,WAAW,EAAC,SAFd;AAGEC,MAAAA,WAAW,EAAC,WAHd;AAIEC,MAAAA,UAAU,EAAC,uBAJb;AAKEC,MAAAA,QAAQ,EAAC;AALX,KAXN;AAkBI,IAAA,QAAQ,EAAE,KAAI,CAACP,KAAL,CAAWQ,MAlBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ,EA2BI,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,GAAG,EAAC,GADR;AACY,IAAA,QAAQ,MADpB;AACqB,IAAA,SAAS,EAAC,kBAD/B;AAEI,IAAA,OAAO,EAAE,KAAI,CAACR,KAAL,CAAWS,IAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAOI,oBAAC,MAAD;AACI,IAAA,GAAG,EAAC,GADR;AACY,IAAA,QAAQ,MADpB;AACqB,IAAA,SAAS,EAAC,mBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,YAAd;AAA2B,IAAA,WAAW,EAAEZ,MAAxC;AAAgD,IAAA,SAAS,EAAEE,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAPJ,CA3BJ,CADJ,EA2CKD,SAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA3ClB,CADJ;AA+CH,CAvDM","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSpeechRecognition } from \"react-speech-kit\";\r\nimport {MDBIcon, MDBBtn, MDBInput, MDBRow} from 'mdbreact'\r\n\r\n\r\nexport const SpeakRecogWorksheet=()=> {\r\n    const [value, setValue] = useState(\"\");\r\n    const { listen, listening, stop } = useSpeechRecognition({\r\n        onResult: result => {\r\n            setValue(result);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className=\"px-3 d-flex align-items-baseline\">\r\n\r\n                    <div className=\"flex-grow-1\">\r\n                        <MDBInput\r\n                            label={this.props.label}\r\n                            className=\"mr-3\"\r\n                            size=\"sm\"\r\n                            value={this.props.value}\r\n                            style={this.props.isRight?{\r\n                                border:'solid',\r\n                                borderColor:'#81c784',\r\n                                borderWidth:'0 0 2px 0',\r\n                                fontFamily:'\\'Roboto\\',sans-serif',\r\n                                fontSize:'18px'\r\n                            }:{\r\n                                border:'solid',\r\n                                borderColor:'#d32f2f',\r\n                                borderWidth:'0 0 2px 0',\r\n                                fontFamily:'\\'Roboto\\',sans-serif',\r\n                                fontSize:'18px'\r\n                            }}\r\n                            onChange={this.props.Change}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <MDBRow center>\r\n                    <MDBBtn\r\n                        tag=\"a\" floating className=\" green lighten-2\"\r\n                        onClick={this.props.post}\r\n                    >\r\n                        <MDBIcon icon=\"clipboard-check\" />\r\n                    </MDBBtn>\r\n                    <MDBBtn\r\n                        tag=\"a\" floating className=\" orange lighten-2\"\r\n                    >\r\n                        <MDBIcon icon=\"microphone\" onMouseDown={listen} onMouseUp={stop}/>\r\n                    </MDBBtn>\r\n\r\n                </MDBRow>\r\n            </div>\r\n            {listening && <div>Go ahead I'm listening</div>}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}