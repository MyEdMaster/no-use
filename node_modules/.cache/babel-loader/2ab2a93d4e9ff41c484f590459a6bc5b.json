{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\src\\\\page\\\\RRH\\\\Component\\\\ask-question\\\\index.js\";\nimport React from 'react';\nimport classes from './index.module.css';\nimport llrh from '../../Lib/llrh.jpg';\nimport bbw from '../../Lib/bbw.jpg';\nimport { MDBBtn, MDBCard, MDBIcon, MDBModal, MDBModalBody } from 'mdbreact'; //------------------------SPEECH RECOGNITION-----------------------------\n\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nvar recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\nexport var AskQuestion =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AskQuestion, _React$Component);\n\n  function AskQuestion(props) {\n    var _this;\n\n    _classCallCheck(this, AskQuestion);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AskQuestion).call(this, props));\n\n    _this.myClick = function (text) {\n      alert(text);\n    };\n\n    _this.toggle = function (nr) {\n      return function () {\n        var modalNumber = 'modal' + nr;\n\n        _this.setState(_defineProperty({}, modalNumber, !_this.state[modalNumber]));\n      };\n    };\n\n    _this.searchAnswer = function (value) {\n      var option = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"question\": value\n        })\n      };\n      fetch('http://127.0.0.1:5000/getanswer', option).then(function (response) {\n        return response.text();\n      }).then(function (answer) {\n        if (answer.substr(0, 1) === '0') {\n          var text = \"Is this the question you want to ask?\\n\" + answer.substring(1, answer.length);\n\n          _this.setState({\n            answer: text,\n            tag: 0,\n            defaultQuestion: answer.substring(1, answer.length)\n          });\n        } else {\n          _this.setState({\n            answer: 'Answer:' + answer.substring(1, answer.length)\n          });\n        }\n      }).catch(5000);\n    };\n\n    _this.searchAgain = function (answer) {\n      var newoption = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"question\": answer\n        })\n      };\n      fetch('http://127.0.0.1:5000/getanswer', newoption).then(function (response) {\n        return response.text();\n      }).then(function (newanswer) {\n        _this.setState({\n          answer: 'Answer:' + newanswer.substring(1, newanswer.length),\n          tag: 1\n        });\n      });\n    };\n\n    _this.state = {\n      modal1: false,\n      modal2: false,\n      redQuestion: '',\n      wolfQuestion: '',\n      answer: '',\n      change: false,\n      tag: 1,\n      defaultQuestion: '',\n      listening: false,\n      speechState: 'Click to start...'\n    };\n    _this.toggleListen = _this.toggleListen.bind(_assertThisInitialized(_this));\n    _this.handleListen = _this.handleListen.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AskQuestion, [{\n    key: \"toggleListen\",\n    //--------------Speech Recognition--------------\n    value: function toggleListen() {\n      this.setState({\n        listening: !this.state.listening\n      }, this.handleListen);\n    }\n  }, {\n    key: \"handleListen\",\n    value: function handleListen() {\n      var _this2 = this;\n\n      console.log('listening?', this.state.listening);\n\n      if (this.state.listening) {\n        recognition.start();\n\n        recognition.onend = function () {\n          _this2.setState({\n            speechState: '...continue listening...'\n          });\n\n          recognition.start();\n        };\n      } else {\n        recognition.stop();\n\n        recognition.onend = function () {\n          _this2.setState({\n            speechState: 'Click to start...'\n          });\n        };\n      }\n\n      recognition.onstart = function () {\n        _this2.setState({\n          speechState: 'Listening...Click to pause'\n        });\n      };\n\n      var finalTranscript = '';\n\n      recognition.onresult = function (event) {\n        var interimTranscript = '';\n\n        for (var i = event.resultIndex; i < event.results.length; i++) {\n          var transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) finalTranscript += transcript + ' ';else interimTranscript += transcript;\n        }\n\n        console.log(finalTranscript);\n        document.getElementById('interim').innerHTML = interimTranscript;\n        document.getElementById('final').value = finalTranscript; //-------------------------COMMANDS------------------------------------\n\n        var transcriptArr = finalTranscript.split(' ');\n        var stopCmd = transcriptArr.slice(-3, -1);\n        console.log('stopCmd', stopCmd);\n\n        if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening') {\n          recognition.stop();\n\n          recognition.onend = function () {\n            console.log('Stopped listening per command');\n            var finalText = transcriptArr.slice(0, -3).join(' ');\n            document.getElementById('final').value = finalText;\n          };\n        }\n      }; //-----------------------------------------------------------------------\n\n\n      recognition.onerror = function (event) {\n        console.log(\"Error occurred in recognition: \" + event.error);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.redQuestion);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.fixed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button button\",\n        onClick: this.toggle(1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: llrh,\n        alt: \"Little Red Riding Hood\",\n        height: \"142\",\n        width: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: classes.fixed1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button button\",\n        onClick: this.toggle(2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: bbw,\n        alt: \"Big Bad Wolf\",\n        height: \"142\",\n        width: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))), React.createElement(MDBModal, {\n        isOpen: this.state.modal1,\n        toggle: this.toggle(1),\n        centered: true,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(MDBModalBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"TRY ASKING\"), React.createElement(\"img\", {\n        src: llrh,\n        alt: \"Little Red Riding Hood\",\n        height: \"71\",\n        width: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"A QUESTION\")), React.createElement(\"div\", {\n        className: \"d-flex justify-content-center align-content-center mt-5 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-grow-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"final\",\n        className: \"form-control form-control-lg \".concat(classes.searchInput),\n        placeholder: \"Ask your question here\",\n        style: {\n          borderStyle: 'solid',\n          borderWidth: '1px',\n          borderColor: '#81c784',\n          borderRadius: '15px',\n          fontFamily: '\\'Rajdhani\\', sans-serif',\n          fontSize: '20px'\n        },\n        onChange: function onChange(e) {\n          var str = e.target.value;\n\n          _this3.setState({\n            redQuestion: str\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        color: \"green lighten-2\",\n        style: {\n          margin: '6px'\n        },\n        onClick: this.toggleListen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"microphone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"ml-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        color: \"deep-purple\",\n        style: {\n          margin: '6px'\n        },\n        onClick: function onClick() {\n          _this3.searchAnswer(_this3.state.redQuestion);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: classes.speechBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, this.state.speechState), React.createElement(\"div\", {\n        id: \"interim\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100 green lighten-2\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          borderStyle: 'solid',\n          borderColor: 'white',\n          borderWidth: '0 0 1px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Hints/Answer\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, this.state.answer))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, this.state.tag < 1 ? React.createElement(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"primary\",\n        size: \"sm\",\n        onClick: function onClick() {\n          _this3.searchAgain(_this3.state.defaultQuestion);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"YES\"), React.createElement(MDBBtn, {\n        size: \"sm\",\n        onClick: function onClick() {\n          _this3.setState({\n            answer: 'Sorry, we cannot find the answer',\n            tag: 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"NO\")) : null))), React.createElement(MDBModal, {\n        isOpen: this.state.modal2,\n        toggle: this.toggle(2),\n        centered: true,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(MDBModalBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title,\n        style: {\n          color: '#7e57c2',\n          borderColor: '#7e57c2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"TRY ASKING\"), React.createElement(\"img\", {\n        src: bbw,\n        alt: \"Little Red Riding Hood\",\n        height: \"71\",\n        width: \"50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"A QUESTION\")), React.createElement(\"div\", {\n        className: \"d-flex justify-content-center align-content-center mt-5 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-grow-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"final\",\n        className: \"form-control form-control-lg \".concat(classes.searchInput),\n        placeholder: \"Ask your question here\",\n        style: {\n          borderStyle: 'solid',\n          borderWidth: '1px',\n          borderColor: '#7e57c2',\n          borderRadius: '15px',\n          fontFamily: '\\'Rajdhani\\', sans-serif',\n          fontSize: '20px'\n        },\n        onChange: function onChange(e) {\n          var str = e.target.value;\n\n          _this3.setState({\n            wolfQuestion: str\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        color: \"green lighten-2\",\n        style: {\n          margin: '6px'\n        },\n        onClick: this.toggleListen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"microphone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"ml-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        tag: \"a\",\n        floating: true,\n        color: \"purple lighten-2\",\n        style: {\n          margin: '6px'\n        },\n        onClick: function onClick() {\n          _this3.searchAnswer(_this3.state.wolfQuestion);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: classes.speechBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, this.state.speechState), React.createElement(\"div\", {\n        id: \"interim\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(MDBCard, {\n        size: \"8\",\n        text: \"white\",\n        className: \"py-3 px-3 w-100 purple lighten-2\",\n        style: {\n          boxShadow: 'none',\n          borderRadius: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          borderStyle: 'solid',\n          borderColor: 'white',\n          borderWidth: '0 0 1px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"Hints/Answer\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, this.state.answer))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, this.state.tag < 1 ? React.createElement(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"primary\",\n        size: \"sm\",\n        onClick: function onClick() {\n          _this3.searchAgain(_this3.state.defaultQuestion);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"YES\"), React.createElement(MDBBtn, {\n        size: \"sm\",\n        onClick: function onClick() {\n          _this3.setState({\n            answer: 'Sorry, we cannot find the answer',\n            tag: 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"NO\")) : null))));\n    }\n  }]);\n\n  return AskQuestion;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\yuwei\\Desktop\\Front_End\\src\\page\\RRH\\Component\\ask-question\\index.js"],"names":["React","classes","llrh","bbw","MDBBtn","MDBCard","MDBIcon","MDBModal","MDBModalBody","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","AskQuestion","props","myClick","text","alert","toggle","nr","modalNumber","setState","state","searchAnswer","value","option","method","headers","body","JSON","stringify","fetch","then","response","answer","substr","substring","length","tag","defaultQuestion","catch","searchAgain","newoption","newanswer","modal1","modal2","redQuestion","wolfQuestion","change","listening","speechState","toggleListen","bind","handleListen","console","log","start","onend","stop","onstart","finalTranscript","onresult","event","interimTranscript","i","resultIndex","results","transcript","isFinal","document","getElementById","innerHTML","transcriptArr","split","stopCmd","slice","finalText","join","onerror","error","fixed","fixed1","title","searchInput","borderStyle","borderWidth","borderColor","borderRadius","fontFamily","fontSize","e","str","target","margin","speechBorder","boxShadow","color","Component"],"mappings":"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","sourcesContent":["'use strict'\nimport React from 'react';\nimport classes from './index.module.css';\nimport llrh from '../../Lib/llrh.jpg';\nimport bbw from '../../Lib/bbw.jpg';\nimport {MDBBtn, MDBCard,MDBIcon, MDBModal, MDBModalBody} from 'mdbreact';\n\n//------------------------SPEECH RECOGNITION-----------------------------\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\n\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'en-US';\n\n\nexport class AskQuestion extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal1: false,\n            modal2: false,\n            redQuestion:'',\n            wolfQuestion:'',\n            answer:'',\n            change:false,\n            tag:1,\n            defaultQuestion:'',\n            listening: false,\n            speechState:'Click to start...'\n\n        };\n        this.toggleListen = this.toggleListen.bind(this)\n        this.handleListen = this.handleListen.bind(this)\n\n    }\n    myClick=(text)=>{\n        alert(text);\n    }\n\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr\n        this.setState({\n            [modalNumber]: !this.state[modalNumber]\n        });\n    }\n    searchAnswer=(value)=>{\n        const option={\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body:JSON.stringify({\"question\":value})\n        };\n        fetch('http://127.0.0.1:5000/getanswer',option)\n            .then(response=>response.text())\n            .then(answer=>{\n                if (answer.substr(0, 1) === '0'){\n\n                    let text=\"Is this the question you want to ask?\\n\"+answer.substring(1,answer.length)\n                    this.setState({\n                        answer:text,\n                        tag:0,\n                        defaultQuestion:answer.substring(1,answer.length)\n                    })\n                }\n                else{\n                    this.setState({\n                        answer:'Answer:'+answer.substring(1,answer.length)\n                    })\n                }\n\n            })\n            .catch(5000)\n    }\n    searchAgain=(answer)=>{\n        const newoption={\n            method:'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body:JSON.stringify({\"question\":answer})\n        };\n        fetch('http://127.0.0.1:5000/getanswer',newoption)\n            .then(response=>response.text())\n            .then(newanswer=>{\n                this.setState({\n                    answer:'Answer:'+newanswer.substring(1,newanswer.length),\n                    tag:1\n                })\n            })\n    };\n    //--------------Speech Recognition--------------\n    toggleListen() {\n        this.setState({\n            listening: !this.state.listening\n        }, this.handleListen)\n    }\n\n    handleListen() {\n\n        console.log('listening?', this.state.listening)\n\n        if (this.state.listening) {\n            recognition.start();\n            recognition.onend = () => {\n                this.setState({\n                    speechState:'...continue listening...'\n                });\n                recognition.start()\n            }\n\n        } else {\n            recognition.stop();\n            recognition.onend = () => {\n                this.setState({\n                    speechState:'Click to start...'\n                });\n            }\n        }\n\n        recognition.onstart = () => {\n            this.setState({\n                speechState:'Listening...Click to pause'\n            });\n        }\n\n        let finalTranscript = '';\n        recognition.onresult = event => {\n            let interimTranscript = '';\n\n            for (let i = event.resultIndex; i < event.results.length; i++) {\n                const transcript = event.results[i][0].transcript;\n                if (event.results[i].isFinal) finalTranscript += transcript + ' ';\n                else interimTranscript += transcript;\n            }\n            console.log(finalTranscript);\n            document.getElementById('interim').innerHTML = interimTranscript;\n            document.getElementById('final').value = finalTranscript;\n\n            //-------------------------COMMANDS------------------------------------\n\n            const transcriptArr = finalTranscript.split(' ');\n            const stopCmd = transcriptArr.slice(-3, -1);\n            console.log('stopCmd', stopCmd);\n\n            if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening'){\n                recognition.stop();\n                recognition.onend = () => {\n                    console.log('Stopped listening per command');\n                    const finalText = transcriptArr.slice(0, -3).join(' ');\n                    document.getElementById('final').value = finalText\n                }\n            }\n        }\n\n        //-----------------------------------------------------------------------\n\n        recognition.onerror = event => {\n            console.log(\"Error occurred in recognition: \" + event.error)\n        }\n\n    }\n\n    render() {\n        console.log(this.state.redQuestion)\n        return (\n            <div>\n                <div className={classes.fixed}>\n                    <button className=\"button button\" onClick={this.toggle(1)}>\n                        <img src={llrh} alt=\"Little Red Riding Hood\" height=\"142\" width=\"100\"/></button>\n                </div>\n                <div className={classes.fixed1}>\n                    <button className=\"button button\" onClick={this.toggle(2)}><img\n                        src={bbw} alt=\"Big Bad Wolf\" height=\"142\" width=\"100\"/></button>\n                </div>\n                <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} centered size=\"lg\">\n\n                    <MDBModalBody className=\"text-center\">\n                        <div className={classes.title}>\n                            <span>TRY ASKING</span>\n                            <img src={llrh} alt=\"Little Red Riding Hood\" height=\"71\" width=\"50\"/>\n                            <span >A QUESTION</span>\n                        </div>\n\n                        <div className=\"d-flex justify-content-center align-content-center mt-5 mb-3\">\n                            <div className=\"flex-grow-1\">\n                                <input\n                                    id='final'\n                                    className={`form-control form-control-lg ${classes.searchInput}`}\n                                    placeholder=\"Ask your question here\"\n                                    style={{\n                                        borderStyle:'solid',\n                                        borderWidth:'1px',\n                                        borderColor:'#81c784',\n                                        borderRadius:'15px',\n                                        fontFamily:'\\'Rajdhani\\', sans-serif',\n                                        fontSize:'20px',\n                                    }}\n                                    onChange={(e) => {\n                                        const str=e.target.value\n                                        this.setState({\n                                            redQuestion: str\n                                        });\n                                    }}\n                                />\n                            </div>\n                            <div className=\"ml-3\">\n                                <MDBBtn\n                                    tag=\"a\" floating color=\"green lighten-2\" style={{margin:'6px'}}\n                                    onClick={this.toggleListen}\n                                >\n                                    <MDBIcon icon=\"microphone\" />\n                                </MDBBtn>\n                            </div>\n                            <div className=\"ml-2\">\n                                <MDBBtn\n                                    tag=\"a\" floating color=\"deep-purple\" style={{margin:'6px'}}\n                                    onClick={()=>{this.searchAnswer(this.state.redQuestion)}}\n                                >\n                                    <MDBIcon icon=\"question\" />\n                                </MDBBtn>\n                            </div>\n                        </div>\n                        <div className={classes.speechBorder}>\n                            <div className={classes.body}>{this.state.speechState}</div>\n                            <div id='interim'></div>\n                        </div>\n\n                        <div className=\"mt-3\">\n                            <MDBCard\n                                size=\"8\"\n                                text=\"white\"\n                                className=\"py-3 px-3 w-100 green lighten-2\"\n                                style={{boxShadow:'none', borderRadius:'15px',}}\n                            >\n                                <p  style={{borderStyle:'solid',borderColor:'white',borderWidth:'0 0 1px 0'}}>Hints/Answer</p>\n                                <p>{this.state.answer}</p>\n                            </MDBCard>\n                        </div>\n                        <div>\n                            {this.state.tag<1? (\n                                <div className=\"d-flex justify-content-center align-items-center\">\n                                    <MDBBtn\n                                        color=\"primary\"\n                                        size=\"sm\"\n                                        onClick={()=>{this.searchAgain(this.state.defaultQuestion)}}\n                                    >\n                                        YES\n                                    </MDBBtn>\n                                    <MDBBtn\n                                        size=\"sm\"\n                                        onClick={()=>{\n                                            this.setState({\n                                                answer:'Sorry, we cannot find the answer',\n                                                tag:1\n                                            })\n                                        }}\n                                    >\n                                        NO\n                                    </MDBBtn>\n\n                                </div>\n                            ):(null)\n                          }\n                        </div>\n                        {/*{this.state.change?(*/}\n                            {/*null*/}\n                        {/*):(*/}\n\n                            {/*<p>*/}\n                                {/*{this.state.answer}*/}\n                            {/*</p>*/}\n                        {/*)}*/}\n                    </MDBModalBody>\n                </MDBModal>\n                <MDBModal isOpen={this.state.modal2} toggle={this.toggle(2)} centered size=\"lg\">\n\n                    <MDBModalBody className=\"text-center\">\n                        <div className={classes.title} style={{color:'#7e57c2', borderColor:'#7e57c2'}}>\n                            <span>TRY ASKING</span>\n                            <img src={bbw} alt=\"Little Red Riding Hood\" height=\"71\" width=\"50\"/>\n                            <span >A QUESTION</span>\n                        </div>\n\n                        <div className=\"d-flex justify-content-center align-content-center mt-5 mb-3\">\n                            <div className=\"flex-grow-1\">\n                                <input\n                                    id='final'\n                                    className={`form-control form-control-lg ${classes.searchInput}`}\n                                    placeholder=\"Ask your question here\"\n                                    style={{\n                                        borderStyle:'solid',\n                                        borderWidth:'1px',\n                                        borderColor:'#7e57c2',\n                                        borderRadius:'15px',\n                                        fontFamily:'\\'Rajdhani\\', sans-serif',\n                                        fontSize:'20px',\n                                    }}\n                                    onChange={(e) => {\n                                        const str=e.target.value\n                                        this.setState({\n                                            wolfQuestion: str\n                                        });\n                                    }}\n                                />\n                            </div>\n                            <div className=\"ml-3\">\n                                <MDBBtn\n                                    tag=\"a\" floating color=\"green lighten-2\" style={{margin:'6px'}}\n                                    onClick={this.toggleListen}\n                                >\n                                    <MDBIcon icon=\"microphone\" />\n                                </MDBBtn>\n                            </div>\n                            <div className=\"ml-2\">\n                                <MDBBtn\n                                    tag=\"a\" floating color=\"purple lighten-2\" style={{margin:'6px'}}\n                                    onClick={()=>{this.searchAnswer(this.state.wolfQuestion)}}\n                                >\n                                    <MDBIcon icon=\"question\" />\n                                </MDBBtn>\n                            </div>\n                        </div>\n                        <div className={classes.speechBorder} >\n                            <div className={classes.body}>{this.state.speechState}</div>\n                            <div id='interim'></div>\n                        </div>\n\n                        <div className=\"mt-3\">\n                            <MDBCard\n                                size=\"8\"\n                                text=\"white\"\n                                className=\"py-3 px-3 w-100 purple lighten-2\"\n                                style={{boxShadow:'none', borderRadius:'15px',}}\n                            >\n                                <p  style={{borderStyle:'solid',borderColor:'white',borderWidth:'0 0 1px 0'}}>Hints/Answer</p>\n                                <p>{this.state.answer}</p>\n                            </MDBCard>\n                        </div>\n                        <div>\n                            {this.state.tag<1? (\n                                <div className=\"d-flex justify-content-center align-items-center\">\n                                    <MDBBtn\n                                        color=\"primary\"\n                                        size=\"sm\"\n                                        onClick={()=>{this.searchAgain(this.state.defaultQuestion)}}\n                                    >\n                                        YES\n                                    </MDBBtn>\n                                    <MDBBtn\n                                        size=\"sm\"\n                                        onClick={()=>{\n                                            this.setState({\n                                                answer:'Sorry, we cannot find the answer',\n                                                tag:1\n                                            })\n                                        }}\n                                    >\n                                        NO\n                                    </MDBBtn>\n\n                                </div>\n                            ):(null)\n                            }\n                        </div>\n                        {/*{this.state.change?(*/}\n                        {/*null*/}\n                        {/*):(*/}\n\n                        {/*<p>*/}\n                        {/*{this.state.answer}*/}\n                        {/*</p>*/}\n                        {/*)}*/}\n                    </MDBModalBody>\n                </MDBModal>\n\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}