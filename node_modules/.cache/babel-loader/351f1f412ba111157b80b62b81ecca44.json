{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\yuwei\\\\Desktop\\\\Front_End\\\\src\\\\page\\\\ComplexNumber\\\\Page\\\\page1.js\";\nimport React from 'react';\nimport { Video } from \"../video-component/video\";\nimport { MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css';\nexport var ComplexPage1 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComplexPage1, _React$Component);\n\n  function ComplexPage1(props) {\n    var _this;\n\n    _classCallCheck(this, ComplexPage1);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComplexPage1).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ComplexPage1, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex align-items-baseline justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.title1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"COMPLEX NUMBERS:\"), React.createElement(\"div\", {\n        className: classes.title2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"What is \", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"i\"), \" ?\")), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"6\",\n        className: classes.font3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Video, {\n        url: 'https://alistempirefoundation.org/assets/complex1.mp4',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        size: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Up until now, all the math you've done has more than likely focused around the \", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"real numbers\"), \" which consists of\", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"rational numbers\"), \" and\", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"irrational numbers\"), \": the rational numbers including numbers like\", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"integers, whole numbers, and natural numbers\"), \"; the irrational numbers consisting of numbers like \\xA0\", React.createElement(\"span\", {\n        className: classes.high,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" \\\\pi \"), \"\\xA0or\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"\\\\sqrt3\"), \"\\xA0\"), \"; numbers like that that can\\u2019t be represented by a fraction.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"But if we take a wider view, we see that in addition to the real numbers, we have an entirely separate category of numbers called the imaginary numbers. The imaginary numbers include numbers like \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"i\"), \" \\xA0 and the square root of a negative number. We\\u2019re going to focus on i in this lesson.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: classes.ph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"So, what exactly is \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"i\"), \" \\xA0 ? \\u201C\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"i\"), \" \\xA0\\u201D is what we call the imaginary unit. By definition, \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"i\"), \" \\xA0 is a number that when squared equals -1. You may also see \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"i\"), \" \\xA0 defined as \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"\\\\sqrt(-1)\"), \" \\xA0 . While that\\u2019s not incorrect, we\\u2019ll explore more about that later when we tackle complex numbers. For now, just know that \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"i\"), \" \\xA0 can be defined either way. You can already see that \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"i\"), \" \\xA0 is probably going to be an interesting number, since up to this point, you\\u2019ve likely been taught that any number squared is going to be a positive. Now, here I am telling you that i represents some number, that when squared, equals -1, and if \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"i^2\"), \" \\xA0 equals -1, what in the world is i raised to some other power? Oh my gosh, how do I figure that out? Relax, it\\u2019s easier than you think. Let\\u2019s take a look at the powers of \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"i\"), \" \\xA0 and find out more.\"), React.createElement(MDBRow, {\n        className: classes.border,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.ph2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"i^0 = 1\"), \" \\xA0 , since any number raised to the 0 power is 1.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"i^1 = i\"), \" \\xA0 , since any number raised to the first power equals itself.\", React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"i^2 = -1\"), \" \\xA0 , since any number \\xA0\", React.createElement(InlineMath, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"\\\\sqrt\", x ^ 2, \" = x\"), \" \\xA0 . i 3 = \\u2212 i , and we can show that by rewriting i 3 as i 2 \\u2217 i . We know that i 2 = \\u2212 1 , so \\u2212 1 \\u2217 i = \\u2212 i . And, of course, i 4 = 1 , since i 4 = ( i 2 ) 2 , which is just ( ( \\u2212 1 ) 2 ) , which equals 1.\")))), React.createElement(MDBRow, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        size: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"deep-purple lighten-1\",\n        className: \"\".concat(classes.btn, \" w-100 mt-3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Start Learning\"))));\n    }\n  }]);\n\n  return ComplexPage1;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\yuwei\\Desktop\\Front_End\\src\\page\\ComplexNumber\\Page\\page1.js"],"names":["React","Video","MDBRow","MDBCol","MDBBtn","InlineMath","BlockMath","classes","ComplexPage1","props","state","title1","title2","font3","ph","high","border","ph2","x","btn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Video} from \"../video-component/video\";\nimport {MDBRow, MDBCol,MDBBtn} from 'mdbreact'\nimport { InlineMath, BlockMath } from 'react-katex';\nimport classes from './index.module.css'\n\n\nexport class ComplexPage1 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                    <div className={classes.title1}>\n                        COMPLEX NUMBERS:\n                    </div>\n                    <div className={classes.title2}>\n                        What is <InlineMath>i</InlineMath> ?\n                    </div>\n                </div>\n\n                <MDBRow>\n                    <MDBCol size=\"3\">\n\n                    </MDBCol>\n                    <MDBCol size=\"6\" className={classes.font3}>\n                        <Video url={'https://alistempirefoundation.org/assets/complex1.mp4'}/>\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow>\n                    <MDBCol size=\"3\">\n\n                    </MDBCol>\n                    <MDBCol size=\"6\">\n                        <p className={classes.ph}>\n                            Up until now, all the math you've done has more than likely focused around\n                            the <span className={classes.high}>real numbers</span> which consists of\n                            <span className={classes.high}>rational numbers</span> and\n                            <span className={classes.high}>irrational numbers</span>: the rational\n                            numbers including numbers like\n                            <span className={classes.high}>integers, whole numbers, and natural\n                            numbers</span>; the irrational numbers consisting of numbers like &nbsp;\n                            <span className={classes.high}><InlineMath> \\pi </InlineMath>\n                            &nbsp;or&nbsp;\n                            <InlineMath>\\sqrt3</InlineMath>&nbsp;</span>\n                                ; numbers like that that can’t be represented by a fraction.\n                        </p>\n                        <br/>\n                        <p className={classes.ph}>\n                            But if we take a wider view, we see that in addition to the real numbers,\n                            we have an entirely separate category of numbers called the imaginary numbers.\n                            The imaginary numbers include numbers like\n                            &nbsp;<InlineMath>i</InlineMath> &nbsp;\n                            and the square root of a negative number. We’re going to focus on i in this lesson.\n                        </p>\n                        <br/>\n                        <p className={classes.ph}>\n                            So, what exactly is\n                            &nbsp;<InlineMath>i</InlineMath> &nbsp;\n                            ? “&nbsp;<InlineMath>i</InlineMath> &nbsp;” is what we call the imaginary unit. By definition,\n                            &nbsp;<InlineMath>i</InlineMath> &nbsp;\n                            is a number that when squared equals -1. You may also see\n                            &nbsp;<InlineMath>i</InlineMath> &nbsp;\n                            defined as\n                            &nbsp;<InlineMath>\\sqrt(-1)</InlineMath> &nbsp;\n                            . While that’s not incorrect, we’ll explore more about that later when we tackle complex numbers. For now, just know that\n                            &nbsp;<InlineMath>i</InlineMath> &nbsp;\n                            can be defined either way. You can already see that\n                            &nbsp;<InlineMath>i</InlineMath> &nbsp;\n                            is probably going to be an interesting number, since up to this point, you’ve likely been taught that any number squared is going to be a positive. Now, here I am telling you that i represents some number, that when squared, equals -1, and if\n                            &nbsp;<InlineMath>i^2</InlineMath> &nbsp;\n                            equals -1, what in the world is i raised to some other power? Oh my gosh, how do I figure that out? Relax, it’s easier than you think. Let’s take a look at the powers of\n                            &nbsp;<InlineMath>i</InlineMath> &nbsp;\n                            and find out more.\n                        </p>\n                        <MDBRow className={classes.border}>\n                            <p className={classes.ph2}>\n                                &nbsp;<InlineMath>i^0 = 1</InlineMath> &nbsp;\n                                , since any number raised to the 0 power is 1.\n                                <tr/>\n                                &nbsp;<InlineMath>i^1 = i</InlineMath> &nbsp;\n                                , since any number raised to the first power equals itself.<tr/>\n                                &nbsp;<InlineMath>i^2 = -1</InlineMath> &nbsp;\n                                , since any number\n                                &nbsp;<InlineMath>\\sqrt{x^2} = x</InlineMath> &nbsp;\n                                .\n\n                                i\n                                3\n                                =\n                                −\n                                i\n                                , and we can show that by rewriting\n                                i\n                                3\n                                as\n                                i\n                                2\n                                ∗\n                                i\n                                . We know that\n                                i\n                                2\n                                =\n                                −\n                                1\n                                , so\n                                −\n                                1\n                                ∗\n                                i\n                                =\n                                −\n                                i\n                                .\n\n                                And, of course,\n                                i\n                                4\n                                =\n                                1\n                                , since\n                                i\n                                4\n                                =\n                                (\n                                i\n                                2\n                                )\n                                2\n                                , which is just\n                                (\n                                (\n                                −\n                                1\n                                )\n                                2\n                                )\n                                , which equals 1.\n                            </p>\n                        </MDBRow>\n\n\n\n                    </MDBCol>\n                </MDBRow>\n                <MDBRow center>\n                    <MDBCol size=\"2\">\n                        <MDBBtn color=\"deep-purple lighten-1\" className={`${classes.btn} w-100 mt-3`}>Start Learning</MDBBtn>\n                    </MDBCol>\n                </MDBRow>\n            </div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}